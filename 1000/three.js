var THREE={REVISION:"70"};"object"==typeof module&&(module.exports=THREE),void 0===Math.sign&&(Math.sign=function(e){return 0>e?-1:e>0?1:0}),THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.MinEquation=103,THREE.MaxEquation=104,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=300,THREE.CubeReflectionMapping=301,THREE.CubeRefractionMapping=302,THREE.EquirectangularReflectionMapping=303,THREE.EquirectangularRefractionMapping=304,THREE.SphericalReflectionMapping=305,THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGBEFormat=THREE.RGBAFormat,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.RGB_PVRTC_4BPPV1_Format=2100,THREE.RGB_PVRTC_2BPPV1_Format=2101,THREE.RGBA_PVRTC_4BPPV1_Format=2102,THREE.RGBA_PVRTC_2BPPV1_Format=2103,THREE.Color=function(e){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(e)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(e,t,r){if(0===t)this.r=this.g=this.b=r;else{var n=function(e,t,r){return 0>r&&(r+=1),r>1&&(r-=1),1/6>r?e+6*(t-e)*r:.5>r?t:2/3>r?e+6*(t-e)*(2/3-r):e},i=.5>=r?r*(1+t):r+t-r*t,a=2*r-i;this.r=n(a,i,e+1/3),this.g=n(a,i,e),this.b=n(a,i,e-1/3)}return this},setStyle:function(e){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)){var t=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e);return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)){var t=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e);return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(e)){var t=/^\#([0-9a-f]{6})$/i.exec(e);return this.setHex(parseInt(t[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){var t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);return this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this}return/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t,r,n=e||{h:0,s:0,l:0},i=this.r,a=this.g,o=this.b,s=Math.max(i,a,o),h=Math.min(i,a,o),l=(h+s)/2;if(h===s)t=0,r=0;else{var u=s-h;switch(r=.5>=l?u/(s+h):u/(2-s-h),s){case i:t=(a-o)/u+(o>a?6:0);break;case a:t=(o-i)/u+2;break;case o:t=(i-a)/u+4}t/=6}return n.h=t,n.s=r,n.l=l,n},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,r){var n=this.getHSL();return n.h+=e,n.s+=t,n.l+=r,this.setHSL(n.h,n.s,n.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){return this.r=e[0],this.g=e[1],this.b=e[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.Quaternion=function(e,t,r,n){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==n?n:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._w=n,this.onChangeCallback(),this},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(e instanceof THREE.Euler==!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var r=Math.cos(e._x/2),n=Math.cos(e._y/2),i=Math.cos(e._z/2),a=Math.sin(e._x/2),o=Math.sin(e._y/2),s=Math.sin(e._z/2);return"XYZ"===e.order?(this._x=a*n*i+r*o*s,this._y=r*o*i-a*n*s,this._z=r*n*s+a*o*i,this._w=r*n*i-a*o*s):"YXZ"===e.order?(this._x=a*n*i+r*o*s,this._y=r*o*i-a*n*s,this._z=r*n*s-a*o*i,this._w=r*n*i+a*o*s):"ZXY"===e.order?(this._x=a*n*i-r*o*s,this._y=r*o*i+a*n*s,this._z=r*n*s+a*o*i,this._w=r*n*i-a*o*s):"ZYX"===e.order?(this._x=a*n*i-r*o*s,this._y=r*o*i+a*n*s,this._z=r*n*s-a*o*i,this._w=r*n*i+a*o*s):"YZX"===e.order?(this._x=a*n*i+r*o*s,this._y=r*o*i+a*n*s,this._z=r*n*s-a*o*i,this._w=r*n*i-a*o*s):"XZY"===e.order&&(this._x=a*n*i-r*o*s,this._y=r*o*i-a*n*s,this._z=r*n*s+a*o*i,this._w=r*n*i+a*o*s),t!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var r=t/2,n=Math.sin(r);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,r=e.elements,n=r[0],i=r[4],a=r[8],o=r[1],s=r[5],h=r[9],l=r[2],u=r[6],f=r[10],c=n+s+f;return c>0?(t=.5/Math.sqrt(c+1),this._w=.25/t,this._x=(u-h)*t,this._y=(a-l)*t,this._z=(o-i)*t):n>s&&n>f?(t=2*Math.sqrt(1+n-s-f),this._w=(u-h)/t,this._x=.25*t,this._y=(i+o)/t,this._z=(a+l)/t):s>f?(t=2*Math.sqrt(1+s-n-f),this._w=(a-l)/t,this._x=(i+o)/t,this._y=.25*t,this._z=(h+u)/t):(t=2*Math.sqrt(1+f-n-s),this._w=(o-i)/t,this._x=(a+l)/t,this._y=(h+u)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t,r=1e-6;return function(n,i){return void 0===e&&(e=new THREE.Vector3),t=n.dot(i)+1,r>t?(t=0,Math.abs(n.x)>Math.abs(n.z)?e.set(-n.y,n.x,0):e.set(0,-n.z,n.y)):e.crossVectors(n,i),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var r=e._x,n=e._y,i=e._z,a=e._w,o=t._x,s=t._y,h=t._z,l=t._w;return this._x=r*l+a*o+n*h-i*s,this._y=n*l+a*s+i*o-r*h,this._z=i*l+a*h+r*s-n*o,this._w=a*l-r*o-n*s-i*h,this.onChangeCallback(),this},multiplyVector3:function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var r=this._x,n=this._y,i=this._z,a=this._w,o=a*e._w+r*e._x+n*e._y+i*e._z;if(0>o?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=r,this._y=n,this._z=i,this;var s=Math.acos(o),h=Math.sqrt(1-o*o);if(Math.abs(h)<.001)return this._w=.5*(a+this._w),this._x=.5*(r+this._x),this._y=.5*(n+this._y),this._z=.5*(i+this._z),this;var l=Math.sin((1-t)*s)/h,u=Math.sin(t*s)/h;return this._w=a*l+this._w*u,this._x=r*l+this._x*u,this._y=n*l+this._y*u,this._z=i*l+this._z*u,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(e,t,r,n){return r.copy(e).slerp(t,n)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t}else this.x=0,this.y=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},clampScalar:function(){var e,t;return function(r,n){return void 0===e&&(e=new THREE.Vector2,t=new THREE.Vector2),e.set(r,r),t.set(n,n),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(t){return t instanceof THREE.Euler==!1&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e;return function(t,r){return void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,r)),this}}(),applyMatrix3:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6]*n,this.y=i[1]*t+i[4]*r+i[7]*n,this.z=i[2]*t+i[5]*r+i[8]*n,this},applyMatrix4:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*n+i[12],this.y=i[1]*t+i[5]*r+i[9]*n+i[13],this.z=i[2]*t+i[6]*r+i[10]*n+i[14],this},applyProjection:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements,a=1/(i[3]*t+i[7]*r+i[11]*n+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*n+i[12])*a,this.y=(i[1]*t+i[5]*r+i[9]*n+i[13])*a,this.z=(i[2]*t+i[6]*r+i[10]*n+i[14])*a,this},applyQuaternion:function(e){var t=this.x,r=this.y,n=this.z,i=e.x,a=e.y,o=e.z,s=e.w,h=s*t+a*n-o*r,l=s*r+o*t-i*n,u=s*n+i*r-a*t,f=-i*t-a*r-o*n;return this.x=h*s+f*-i+l*-o-u*-a,this.y=l*s+f*-a+u*-i-h*-o,this.z=u*s+f*-o+h*-a-l*-i,this},project:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.multiplyMatrices(t.projectionMatrix,e.getInverse(t.matrixWorld)),this.applyProjection(e)}}(),unproject:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyProjection(e)}}(),transformDirection:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*n,this.y=i[1]*t+i[5]*r+i[9]*n,this.z=i[2]*t+i[6]*r+i[10]*n,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},clampScalar:function(){var e,t;return function(r,n){return void 0===e&&(e=new THREE.Vector3,t=new THREE.Vector3),e.set(r,r,r),t.set(n,n,n),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var r=this.x,n=this.y,i=this.z;return this.x=n*e.z-i*e.y,this.y=i*e.x-r*e.z,this.z=r*e.y-n*e.x,this},crossVectors:function(e,t){var r=e.x,n=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=n*s-i*o,this.y=i*a-r*s,this.z=r*o-n*a,this},projectOnVector:function(){var e,t;return function(r){return void 0===e&&(e=new THREE.Vector3),e.copy(r).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/(this.length()*e.length());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,n=this.z-e.z;return t*t+r*r+n*n},setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),n=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=r,this.z=n,this},setFromMatrixColumn:function(e,t){var r=4*e,n=t.elements;return this.x=n[r],this.y=n[r+1],this.z=n[r+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(e,t,r,n){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==n?n:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,r=this.y,n=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*n+a[12]*i,this.y=a[1]*t+a[5]*r+a[9]*n+a[13]*i,this.z=a[2]*t+a[6]*r+a[10]*n+a[14]*i,this.w=a[3]*t+a[7]*r+a[11]*n+a[15]*i,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t,this.w*=t}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,n,i,a=.01,o=.1,s=e.elements,h=s[0],l=s[4],u=s[8],f=s[1],c=s[5],d=s[9],E=s[2],p=s[6],m=s[10];if(Math.abs(l-f)<a&&Math.abs(u-E)<a&&Math.abs(d-p)<a){if(Math.abs(l+f)<o&&Math.abs(u+E)<o&&Math.abs(d+p)<o&&Math.abs(h+c+m-3)<o)return this.set(1,0,0,0),this;t=Math.PI;var g=(h+1)/2,v=(c+1)/2,T=(m+1)/2,_=(l+f)/4,x=(u+E)/4,y=(d+p)/4;return g>v&&g>T?a>g?(r=0,n=.707106781,i=.707106781):(r=Math.sqrt(g),n=_/r,i=x/r):v>T?a>v?(r=.707106781,n=0,i=.707106781):(n=Math.sqrt(v),r=_/n,i=y/n):a>T?(r=.707106781,n=.707106781,i=0):(i=Math.sqrt(T),r=x/i,n=y/i),this.set(r,n,i,t),this}var R=Math.sqrt((p-d)*(p-d)+(u-E)*(u-E)+(f-l)*(f-l));return Math.abs(R)<.001&&(R=1),this.x=(p-d)/R,this.y=(u-E)/R,this.z=(f-l)/R,this.w=Math.acos((h+c+m-1)/2),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},clampScalar:function(){var e,t;return function(r,n){return void 0===e&&(e=new THREE.Vector4,t=new THREE.Vector4),e.set(r,r,r,r),t.set(n,n,n,n),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this.w=e.array[t+3],this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(e,t,r,n){this._x=e||0,this._y=t||0,this._z=r||0,this._order=n||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._order=n||this._order,this.onChangeCallback(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,r){var n=THREE.Math.clamp,i=e.elements,a=i[0],o=i[4],s=i[8],h=i[1],l=i[5],u=i[9],f=i[2],c=i[6],d=i[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(n(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(c,l),this._z=0)):"YXZ"===t?(this._x=Math.asin(-n(u,-1,1)),Math.abs(u)<.99999?(this._y=Math.atan2(s,d),this._z=Math.atan2(h,l)):(this._y=Math.atan2(-f,a),this._z=0)):"ZXY"===t?(this._x=Math.asin(n(c,-1,1)),Math.abs(c)<.99999?(this._y=Math.atan2(-f,d),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(h,a))):"ZYX"===t?(this._y=Math.asin(-n(f,-1,1)),Math.abs(f)<.99999?(this._x=Math.atan2(c,d),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-o,l))):"YZX"===t?(this._z=Math.asin(n(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-f,a)):(this._x=0,this._y=Math.atan2(s,d))):"XZY"===t?(this._z=Math.asin(-n(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(c,l),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-u,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,r!==!1&&this.onChangeCallback(),this},setFromQuaternion:function(){var e;return function(t,r,n){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,r,n),this}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,n){e.subVectors(r,this.start),t.subVectors(this.end,this.start);var i=t.dot(t),a=t.dot(e),o=a/i;return n&&(o=THREE.Math.clamp(o,0,1)),o}}(),closestPointToPoint:function(e,t,r){var n=this.closestPointToPointParameter(e,t),i=r||new THREE.Vector3;return this.delta(i).multiplyScalar(n).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)
},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;r>t;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,r){var n=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){var t=e||new THREE.Vector2;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector2;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e,t){var r=t||new THREE.Vector2;return r.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){var r=t||new THREE.Vector2;return r.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){var r=e.copy(t).clamp(this.min,this.max);return r.sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;r>t;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,r){var n=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var r=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){var n=t.geometry;if(void 0!==n)if(n instanceof THREE.Geometry)for(var i=n.vertices,a=0,o=i.length;o>a;a++)e.copy(i[a]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e);else if(n instanceof THREE.BufferGeometry&&void 0!==n.attributes.position)for(var s=n.attributes.position.array,a=0,o=s.length;o>a;a+=3)e.set(s[a],s[a+1],s[a+2]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)}),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e,t){var r=t||new THREE.Vector3;return r.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){var r=t||new THREE.Vector3;return r.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.copy(t).clamp(this.min,this.max);return r.sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){var r=t||new THREE.Sphere;return r.center=this.center(),r.radius=.5*this.size(e).length(),r}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,r,n,i,a,o,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=r,l[1]=n,l[4]=i,l[7]=a,l[2]=o,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,r,n){void 0===r&&(r=0),void 0===n&&(n=t.length);for(var i=0,a=r;n>i;i+=3,a+=3)e.x=t[a],e.y=t[a+1],e.z=t[a+2],e.applyMatrix3(this),t[a]=e.x,t[a+1]=e.y,t[a+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],h=e[7],l=e[8];return t*a*l-t*o*h-r*i*l+r*o*s+n*i*h-n*a*s},getInverse:function(e,t){var r=e.elements,n=this.elements;n[0]=r[10]*r[5]-r[6]*r[9],n[1]=-r[10]*r[1]+r[2]*r[9],n[2]=r[6]*r[1]-r[2]*r[5],n[3]=-r[10]*r[4]+r[6]*r[8],n[4]=r[10]*r[0]-r[2]*r[8],n[5]=-r[6]*r[0]+r[2]*r[4],n[6]=r[9]*r[4]-r[5]*r[8],n[7]=-r[9]*r[0]+r[1]*r[8],n[8]=r[5]*r[0]-r[1]*r[4];var i=r[0]*n[0]+r[1]*n[3]+r[2]*n[6];if(0===i){var a="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(a);return console.warn(a),this.identity(),this}return this.multiplyScalar(1/i),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},clone:function(){return(new THREE.Matrix3).fromArray(this.elements)}},THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,n,i,a,o,s,h,l,u,f,c,d,E,p){var m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=n,m[1]=i,m[5]=a,m[9]=o,m[13]=s,m[2]=h,m[6]=l,m[10]=u,m[14]=f,m[3]=c,m[7]=d,m[11]=E,m[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractBasis:function(e,t,r){var n=this.elements;return e.set(n[0],n[1],n[2]),t.set(n[4],n[5],n[6]),r.set(n[8],n[9],n[10]),this},makeBasis:function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var r=this.elements,n=t.elements,i=1/e.set(n[0],n[1],n[2]).length(),a=1/e.set(n[4],n[5],n[6]).length(),o=1/e.set(n[8],n[9],n[10]).length();return r[0]=n[0]*i,r[1]=n[1]*i,r[2]=n[2]*i,r[4]=n[4]*a,r[5]=n[5]*a,r[6]=n[6]*a,r[8]=n[8]*o,r[9]=n[9]*o,r[10]=n[10]*o,this}}(),makeRotationFromEuler:function(e){e instanceof THREE.Euler==!1&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,r=e.x,n=e.y,i=e.z,a=Math.cos(r),o=Math.sin(r),s=Math.cos(n),h=Math.sin(n),l=Math.cos(i),u=Math.sin(i);if("XYZ"===e.order){var f=a*l,c=a*u,d=o*l,E=o*u;t[0]=s*l,t[4]=-s*u,t[8]=h,t[1]=c+d*h,t[5]=f-E*h,t[9]=-o*s,t[2]=E-f*h,t[6]=d+c*h,t[10]=a*s}else if("YXZ"===e.order){var p=s*l,m=s*u,g=h*l,v=h*u;t[0]=p+v*o,t[4]=g*o-m,t[8]=a*h,t[1]=a*u,t[5]=a*l,t[9]=-o,t[2]=m*o-g,t[6]=v+p*o,t[10]=a*s}else if("ZXY"===e.order){var p=s*l,m=s*u,g=h*l,v=h*u;t[0]=p-v*o,t[4]=-a*u,t[8]=g+m*o,t[1]=m+g*o,t[5]=a*l,t[9]=v-p*o,t[2]=-a*h,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){var f=a*l,c=a*u,d=o*l,E=o*u;t[0]=s*l,t[4]=d*h-c,t[8]=f*h+E,t[1]=s*u,t[5]=E*h+f,t[9]=c*h-d,t[2]=-h,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){var T=a*s,_=a*h,x=o*s,y=o*h;t[0]=s*l,t[4]=y-T*u,t[8]=x*u+_,t[1]=u,t[5]=a*l,t[9]=-o*l,t[2]=-h*l,t[6]=_*u+x,t[10]=T-y*u}else if("XZY"===e.order){var T=a*s,_=a*h,x=o*s,y=o*h;t[0]=s*l,t[4]=-u,t[8]=h*l,t[1]=T*u+y,t[5]=a*l,t[9]=_*u-x,t[2]=x*u-_,t[6]=o*l,t[10]=y*u+T}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,n=e.y,i=e.z,a=e.w,o=r+r,s=n+n,h=i+i,l=r*o,u=r*s,f=r*h,c=n*s,d=n*h,E=i*h,p=a*o,m=a*s,g=a*h;return t[0]=1-(c+E),t[4]=u-g,t[8]=f+m,t[1]=u+g,t[5]=1-(l+E),t[9]=d-p,t[2]=f-m,t[6]=d+p,t[10]=1-(l+c),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(n,i,a){var o=this.elements;return r.subVectors(n,i).normalize(),0===r.length()&&(r.z=1),e.crossVectors(a,r).normalize(),0===e.length()&&(r.x+=1e-4,e.crossVectors(a,r).normalize()),t.crossVectors(r,e),o[0]=e.x,o[4]=t.x,o[8]=r.x,o[1]=e.y,o[5]=t.y,o[9]=r.y,o[2]=e.z,o[6]=t.z,o[10]=r.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var r=e.elements,n=t.elements,i=this.elements,a=r[0],o=r[4],s=r[8],h=r[12],l=r[1],u=r[5],f=r[9],c=r[13],d=r[2],E=r[6],p=r[10],m=r[14],g=r[3],v=r[7],T=r[11],_=r[15],x=n[0],y=n[4],R=n[8],b=n[12],H=n[1],M=n[5],w=n[9],S=n[13],A=n[2],C=n[6],F=n[10],P=n[14],B=n[3],D=n[7],U=n[11],L=n[15];return i[0]=a*x+o*H+s*A+h*B,i[4]=a*y+o*M+s*C+h*D,i[8]=a*R+o*w+s*F+h*U,i[12]=a*b+o*S+s*P+h*L,i[1]=l*x+u*H+f*A+c*B,i[5]=l*y+u*M+f*C+c*D,i[9]=l*R+u*w+f*F+c*U,i[13]=l*b+u*S+f*P+c*L,i[2]=d*x+E*H+p*A+m*B,i[6]=d*y+E*M+p*C+m*D,i[10]=d*R+E*w+p*F+m*U,i[14]=d*b+E*S+p*P+m*L,i[3]=g*x+v*H+T*A+_*B,i[7]=g*y+v*M+T*C+_*D,i[11]=g*R+v*w+T*F+_*U,i[15]=g*b+v*S+T*P+_*L,this},multiplyToArray:function(e,t,r){var n=this.elements;return this.multiplyMatrices(e,t),r[0]=n[0],r[1]=n[1],r[2]=n[2],r[3]=n[3],r[4]=n[4],r[5]=n[5],r[6]=n[6],r[7]=n[7],r[8]=n[8],r[9]=n[9],r[10]=n[10],r[11]=n[11],r[12]=n[12],r[13]=n[13],r[14]=n[14],r[15]=n[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,r,n){void 0===r&&(r=0),void 0===n&&(n=t.length);for(var i=0,a=r;n>i;i+=3,a+=3)e.x=t[a],e.y=t[a+1],e.z=t[a+2],e.applyMatrix4(this),t[a]=e.x,t[a+1]=e.y,t[a+2]=e.z;return t}}(),rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],r=e[4],n=e[8],i=e[12],a=e[1],o=e[5],s=e[9],h=e[13],l=e[2],u=e[6],f=e[10],c=e[14],d=e[3],E=e[7],p=e[11],m=e[15];return d*(+i*s*u-n*h*u-i*o*f+r*h*f+n*o*c-r*s*c)+E*(+t*s*c-t*h*f+i*a*f-n*a*c+n*h*l-i*s*l)+p*(+t*h*u-t*o*c-i*a*u+r*a*c+i*o*l-r*h*l)+m*(-n*o*l-t*s*u+t*o*f+n*a*u-r*a*f+r*s*l)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var r=this.elements,n=e.elements,i=n[0],a=n[4],o=n[8],s=n[12],h=n[1],l=n[5],u=n[9],f=n[13],c=n[2],d=n[6],E=n[10],p=n[14],m=n[3],g=n[7],v=n[11],T=n[15];r[0]=u*p*g-f*E*g+f*d*v-l*p*v-u*d*T+l*E*T,r[4]=s*E*g-o*p*g-s*d*v+a*p*v+o*d*T-a*E*T,r[8]=o*f*g-s*u*g+s*l*v-a*f*v-o*l*T+a*u*T,r[12]=s*u*d-o*f*d-s*l*E+a*f*E+o*l*p-a*u*p,r[1]=f*E*m-u*p*m-f*c*v+h*p*v+u*c*T-h*E*T,r[5]=o*p*m-s*E*m+s*c*v-i*p*v-o*c*T+i*E*T,r[9]=s*u*m-o*f*m-s*h*v+i*f*v+o*h*T-i*u*T,r[13]=o*f*c-s*u*c+s*h*E-i*f*E-o*h*p+i*u*p,r[2]=l*p*m-f*d*m+f*c*g-h*p*g-l*c*T+h*d*T,r[6]=s*d*m-a*p*m-s*c*g+i*p*g+a*c*T-i*d*T,r[10]=a*f*m-s*l*m+s*h*g-i*f*g-a*h*T+i*l*T,r[14]=s*l*c-a*f*c-s*h*d+i*f*d+a*h*p-i*l*p,r[3]=u*d*m-l*E*m-u*c*g+h*E*g+l*c*v-h*d*v,r[7]=a*E*m-o*d*m+o*c*g-i*E*g-a*c*v+i*d*v,r[11]=o*l*m-a*u*m-o*h*g+i*u*g+a*h*v-i*l*v,r[15]=a*u*c-o*l*c+o*h*d-i*u*d-a*h*E+i*l*E;var _=i*r[0]+h*r[4]+c*r[8]+m*r[12];if(0==_){var x="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(x);return console.warn(x),this.identity(),this}return this.multiplyScalar(1/_),this},translate:function(){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,r=e.x,n=e.y,i=e.z;return t[0]*=r,t[4]*=n,t[8]*=i,t[1]*=r,t[5]*=n,t[9]*=i,t[2]*=r,t[6]*=n,t[10]*=i,t[3]*=r,t[7]*=n,t[11]*=i,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,Math.max(r,n)))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),n=Math.sin(t),i=1-r,a=e.x,o=e.y,s=e.z,h=i*a,l=i*o;return this.set(h*a+r,h*o-n*s,h*s+n*o,0,h*o+n*s,l*o+r,l*s-n*a,0,h*s-n*o,l*s+n*a,i*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},compose:function(e,t,r){return this.makeRotationFromQuaternion(t),this.scale(r),this.setPosition(e),this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(r,n,i){var a=this.elements,o=e.set(a[0],a[1],a[2]).length(),s=e.set(a[4],a[5],a[6]).length(),h=e.set(a[8],a[9],a[10]).length(),l=this.determinant();0>l&&(o=-o),r.x=a[12],r.y=a[13],r.z=a[14],t.elements.set(this.elements);var u=1/o,f=1/s,c=1/h;return t.elements[0]*=u,t.elements[1]*=u,t.elements[2]*=u,t.elements[4]*=f,t.elements[5]*=f,t.elements[6]*=f,t.elements[8]*=c,t.elements[9]*=c,t.elements[10]*=c,n.setFromRotationMatrix(t),i.x=o,i.y=s,i.z=h,this}}(),makeFrustum:function(e,t,r,n,i,a){var o=this.elements,s=2*i/(t-e),h=2*i/(n-r),l=(t+e)/(t-e),u=(n+r)/(n-r),f=-(a+i)/(a-i),c=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=h,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=f,o[14]=c,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makePerspective:function(e,t,r,n){var i=r*Math.tan(THREE.Math.degToRad(.5*e)),a=-i,o=a*t,s=i*t;return this.makeFrustum(o,s,a,i,r,n)},makeOrthographic:function(e,t,r,n,i,a){var o=this.elements,s=t-e,h=r-n,l=a-i,u=(t+e)/s,f=(r+n)/h,c=(a+i)/l;return o[0]=2/s,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2/h,o[9]=0,o[13]=-f,o[2]=0,o[6]=0,o[10]=-2/l,o[14]=-c,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)}},THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){var r=t||new THREE.Vector3;return r.copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var n=r.dot(this.direction);return 0>n?r.copy(this.origin):r.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);return 0>r?this.origin.distanceTo(t):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceTo(t))}}(),distanceSqToSegment:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(n,i,a,o){e.copy(n).add(i).multiplyScalar(.5),t.copy(i).sub(n).normalize(),r.copy(this.origin).sub(e);var s,h,l,u,f=.5*n.distanceTo(i),c=-this.direction.dot(t),d=r.dot(this.direction),E=-r.dot(t),p=r.lengthSq(),m=Math.abs(1-c*c);if(m>0)if(s=c*E-d,h=c*d-E,u=f*m,s>=0)if(h>=-u)if(u>=h){var g=1/m;s*=g,h*=g,l=s*(s+c*h+2*d)+h*(c*s+h+2*E)+p}else h=f,s=Math.max(0,-(c*h+d)),l=-s*s+h*(h+2*E)+p;else h=-f,s=Math.max(0,-(c*h+d)),l=-s*s+h*(h+2*E)+p;else-u>=h?(s=Math.max(0,-(-c*f+d)),h=s>0?-f:Math.min(Math.max(-f,-E),f),l=-s*s+h*(h+2*E)+p):u>=h?(s=0,h=Math.min(Math.max(-f,-E),f),l=h*(h+2*E)+p):(s=Math.max(0,-(c*f+d)),h=s>0?f:Math.min(Math.max(-f,-E),f),l=-s*s+h*(h+2*E)+p);else h=c>0?-f:f,s=Math.max(0,-(c*h+d)),l=-s*s+h*(h+2*E)+p;return a&&a.copy(this.direction).multiplyScalar(s).add(this.origin),o&&o.copy(t).multiplyScalar(h).add(e),l}}(),isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},intersectSphere:function(){var e=new THREE.Vector3;return function(t,r){e.subVectors(t.center,this.origin);var n=e.dot(this.direction),i=e.dot(e)-n*n,a=t.radius*t.radius;if(i>a)return null;var o=Math.sqrt(a-i),s=n-o,h=n+o;return 0>s&&0>h?null:0>s?this.at(h,r):this.at(s,r)}}(),isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);if(0===t)return!0;var r=e.normal.dot(this.direction);return 0>r*t?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var r,n,i,a,o,s,h=1/this.direction.x,l=1/this.direction.y,u=1/this.direction.z,f=this.origin;return h>=0?(r=(e.min.x-f.x)*h,n=(e.max.x-f.x)*h):(r=(e.max.x-f.x)*h,n=(e.min.x-f.x)*h),l>=0?(i=(e.min.y-f.y)*l,a=(e.max.y-f.y)*l):(i=(e.max.y-f.y)*l,a=(e.min.y-f.y)*l),r>a||i>n?null:((i>r||r!==r)&&(r=i),(n>a||n!==n)&&(n=a),u>=0?(o=(e.min.z-f.z)*u,s=(e.max.z-f.z)*u):(o=(e.max.z-f.z)*u,s=(e.min.z-f.z)*u),r>s||o>n?null:((o>r||r!==r)&&(r=o),(n>s||n!==n)&&(n=s),0>n?null:this.at(r>=0?r:n,t)))},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3,n=new THREE.Vector3;return function(i,a,o,s,h){t.subVectors(a,i),r.subVectors(o,i),n.crossVectors(t,r);var l,u=this.direction.dot(n);if(u>0){if(s)return null;l=1}else{if(!(0>u))return null;l=-1,u=-u}e.subVectors(this.origin,i);var f=l*this.direction.dot(r.crossVectors(e,r));if(0>f)return null;var c=l*this.direction.dot(t.cross(e));if(0>c)return null;if(f+c>u)return null;var d=-l*e.dot(n);return 0>d?null:this.at(d/u,h)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(t,r){var n=this.center;void 0!==r?n.copy(r):e.setFromPoints(t).center(n);for(var i=0,a=0,o=t.length;o>a;a++)i=Math.max(i,n.distanceToSquared(t[a]));return this.radius=Math.sqrt(i),this}}(),copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),n=t||new THREE.Vector3;return n.copy(e),r>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n},getBoundingBox:function(e){var t=e||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,r,n,i,a){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==a?a:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,r,n,i,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(n),o[4].copy(i),o[5].copy(a),this},copy:function(e){for(var t=this.planes,r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements,n=r[0],i=r[1],a=r[2],o=r[3],s=r[4],h=r[5],l=r[6],u=r[7],f=r[8],c=r[9],d=r[10],E=r[11],p=r[12],m=r[13],g=r[14],v=r[15];return t[0].setComponents(o-n,u-s,E-f,v-p).normalize(),t[1].setComponents(o+n,u+s,E+f,v+p).normalize(),t[2].setComponents(o+i,u+h,E+c,v+m).normalize(),t[3].setComponents(o-i,u-h,E-c,v-m).normalize(),t[4].setComponents(o-a,u-l,E-d,v-g).normalize(),t[5].setComponents(o+a,u+l,E+d,v+g).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var r=t.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),e.copy(r.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,r=e.center,n=-e.radius,i=0;6>i;i++){var a=t[i].distanceToPoint(r);if(n>a)return!1}return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){for(var n=this.planes,i=0;6>i;i++){var a=n[i];e.x=a.normal.x>0?r.min.x:r.max.x,t.x=a.normal.x>0?r.max.x:r.min.x,e.y=a.normal.y>0?r.min.y:r.max.y,t.y=a.normal.y>0?r.max.y:r.min.y,e.z=a.normal.z>0?r.min.z:r.max.z,t.z=a.normal.z>0?r.max.z:r.min.z;var o=a.distanceToPoint(e),s=a.distanceToPoint(t);if(0>o&&0>s)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,r=0;6>r;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,n){return this.normal.set(e,t,r),this.constant=n,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,n,i){var a=e.subVectors(i,n).cross(t.subVectors(r,n)).normalize();return this.setFromNormalAndCoplanarPoint(a,r),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e),n=t||new THREE.Vector3;return n.copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return 0>t&&r>0||0>r&&t>0},intersectLine:function(){var e=new THREE.Vector3;return function(t,r){var n=r||new THREE.Vector3,i=t.delta(e),a=this.normal.dot(i);if(0==a)return 0==this.distanceToPoint(t.start)?n.copy(t.start):void 0;var o=-(t.start.dot(this.normal)+this.constant)/a;return 0>o||o>1?void 0:n.copy(i).multiplyScalar(o).add(t.start)}}(),coplanarPoint:function(e){var t=e||new THREE.Vector3;return t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Matrix3;return function(n,i){var a=i||r.getNormalMatrix(n),o=e.copy(this.normal).applyMatrix3(a),s=this.coplanarPoint(t);return s.applyMatrix4(n),this.setFromNormalAndCoplanarPoint(o,s),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),r=new Array(36),n=0;return function(){for(var i=0;36>i;i++)8==i||13==i||18==i||23==i?r[i]="-":14==i?r[i]="4":(2>=n&&(n=33554432+16777216*Math.random()|0),e=15&n,n>>=4,r[i]=t[19==i?3&e|8:e]);return r.join("")}}(),clamp:function(e,t,r){return t>e?t:e>r?r:e},clampBottom:function(e,t){return t>e?t:e},mapLinear:function(e,t,r,n,i){return n+(e-t)*(i-n)/(r-t)},smoothstep:function(e,t,r){return t>=e?0:e>=r?1:(e=(e-t)/(r-t),e*e*(3-2*e))},smootherstep:function(e,t,r){return t>=e?0:e>=r?1:(e=(e-t)/(r-t),e*e*e*(e*(6*e-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return Math.floor(this.randFloat(e,t))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return 0===(e&e-1)&&0!==e}},THREE.Spline=function(e){function t(e,t,r,n,i,a,o){var s=.5*(r-e),h=.5*(n-t);return(2*(t-r)+s+h)*o+(-3*(t-r)-2*s-h)*a+s*i+t}this.points=e;var r,n,i,a,o,s,h,l,u,f=[],c={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return r=(this.points.length-1)*e,n=Math.floor(r),i=r-n,f[0]=0===n?n:n-1,f[1]=n,f[2]=n>this.points.length-2?this.points.length-1:n+1,f[3]=n>this.points.length-3?this.points.length-1:n+2,s=this.points[f[0]],h=this.points[f[1]],l=this.points[f[2]],u=this.points[f[3]],a=i*i,o=i*a,c.x=t(s.x,h.x,l.x,u.x,i,a,o),c.y=t(s.y,h.y,l.y,u.y,i,a,o),c.z=t(s.z,h.z,l.z,u.z,i,a,o),c},this.getControlPointsArray=function(){var e,t,r=this.points.length,n=[];for(e=0;r>e;e++)t=this.points[e],n[e]=[t.x,t.y,t.z];return n},this.getLength=function(e){var t,r,n,i,a=0,o=0,s=0,h=new THREE.Vector3,l=new THREE.Vector3,u=[],f=0;for(u[0]=0,e||(e=100),n=this.points.length*e,h.copy(this.points[0]),t=1;n>t;t++)r=t/n,i=this.getPoint(r),l.copy(i),f+=l.distanceTo(h),h.copy(i),a=(this.points.length-1)*r,o=Math.floor(a),o!=s&&(u[o]=f,s=o);
return u[u.length]=f,{chunks:u,total:f}},this.reparametrizeByArcLength=function(e){var t,r,n,i,a,o,s,h,l=[],u=new THREE.Vector3,f=this.getLength();for(l.push(u.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(o=f.chunks[t]-f.chunks[t-1],s=Math.ceil(e*o/f.total),i=(t-1)/(this.points.length-1),a=t/(this.points.length-1),r=1;s-1>r;r++)n=i+r*(1/s)*(a-i),h=this.getPoint(n),l.push(u.copy(h).clone());l.push(u.copy(this.points[t]).clone())}this.points=l}},THREE.Triangle=function(e,t,r){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,r,n,i){var a=i||new THREE.Vector3;a.subVectors(n,r),e.subVectors(t,r),a.cross(e);var o=a.lengthSq();return o>0?a.multiplyScalar(1/Math.sqrt(o)):a.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(n,i,a,o,s){e.subVectors(o,i),t.subVectors(a,i),r.subVectors(n,i);var h=e.dot(e),l=e.dot(t),u=e.dot(r),f=t.dot(t),c=t.dot(r),d=h*f-l*l,E=s||new THREE.Vector3;if(0==d)return E.set(-2,-1,-1);var p=1/d,m=(f*u-l*c)*p,g=(h*c-l*u)*p;return E.set(1-m-g,g,m)}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,r,n,i){var a=THREE.Triangle.barycoordFromPoint(t,r,n,i,e);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,n){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[n]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){var t=e||new THREE.Plane;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners,n=r[e];if(void 0!==n){var i=n.indexOf(t);-1!==i&&n.splice(i,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners,r=t[e.type];if(void 0!==r){e.target=this;for(var n=[],i=r.length,a=0;i>a;a++)n[a]=r[a];for(var a=0;i>a;a++)n[a].call(this,e)}}}},function(e){e.Raycaster=function(t,r,n,i){this.ray=new e.Ray(t,r),this.near=n||0,this.far=i||1/0,this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var t=function(e,t){return e.distance-t.distance},r=function(e,t,n,i){if(e.raycast(t,n),i===!0)for(var a=e.children,o=0,s=a.length;s>o;o++)r(a[o],t,n,!0)};e.Raycaster.prototype={constructor:e.Raycaster,precision:1e-4,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(t,r){r instanceof e.PerspectiveCamera?(this.ray.origin.copy(r.position),this.ray.direction.set(t.x,t.y,.5).unproject(r).sub(r.position).normalize()):r instanceof e.OrthographicCamera?(this.ray.origin.set(t.x,t.y,-1).unproject(r),this.ray.direction.set(0,0,-1).transformDirection(r.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,n){var i=[];return r(e,this,i,n),i.sort(t),i},intersectObjects:function(e,n){var i=[];if(e instanceof Array==!1)return console.log("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(var a=0,o=e.length;o>a;a++)r(e[a],this,i,n);return i.sort(t),i}}}(THREE),THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=void 0,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var e=new THREE.Vector3,t=new THREE.Euler,r=new THREE.Quaternion,n=new THREE.Vector3(1,1,1),i=function(){r.setFromEuler(t,!1)},a=function(){t.setFromQuaternion(r,void 0,!1)};t.onChange(i),r.onChange(a),Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:t},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:n}}),this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order},set eulerOrder(e){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order=e},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,r){return e.setFromAxisAngle(t,r),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,r){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add:",e,"can't be added as a child of itself."),this):(e instanceof THREE.Object3D?(void 0!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):console.error("THREE.Object3D.add:",e,"is not an instance of THREE.Object3D."),this)},remove:function(e){if(arguments.length>1)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);var r=this.children.indexOf(e);-1!==r&&(e.parent=void 0,e.dispatchEvent({type:"removed"}),this.children.splice(r,1))},getChildByName:function(e,t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e,t)},getObjectById:function(e,t){return this.getObjectByProperty("id",e,t)},getObjectByName:function(e,t){return this.getObjectByProperty("name",e,t)},getObjectByProperty:function(e,t,r){if(this[e]===t)return this;for(var n=0,i=this.children.length;i>n;n++){var a=this.children[n],o=a.getObjectByProperty(e,t,r);if(void 0!==o)return o}return void 0},getWorldPosition:function(e){var t=e||new THREE.Vector3;return this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){var n=r||new THREE.Quaternion;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,n,t),n}}(),getWorldRotation:function(){var e=new THREE.Quaternion;return function(t){var r=t||new THREE.Euler;return this.getWorldQuaternion(e),r.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new THREE.Vector3,t=new THREE.Quaternion;return function(r){var n=r||new THREE.Vector3;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,n),n}}(),getWorldDirection:function(){var e=new THREE.Quaternion;return function(t){var r=t||new THREE.Vector3;return this.getWorldQuaternion(e),r.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=0,r=this.children.length;r>t;t++)this.children[t].traverse(e)},traverseVisible:function(e){if(this.visible!==!1){e(this);for(var t=0,r=this.children.length;r>t;t++)this.children[t].traverseVisible(e)}},traverseAncestors:function(e){this.parent&&(e(this.parent),this.parent.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||e===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;r>t;t++)this.children[t].updateMatrixWorld(e)},toJSON:function(){var e={metadata:{version:4.3,type:"Object",generator:"ObjectExporter"}},t={},r=function(r){if(void 0===e.geometries&&(e.geometries=[]),void 0===t[r.uuid]){var n=r.toJSON();delete n.metadata,t[r.uuid]=n,e.geometries.push(n)}return r.uuid},n={},i=function(t){if(void 0===e.materials&&(e.materials=[]),void 0===n[t.uuid]){var r=t.toJSON();delete r.metadata,n[t.uuid]=r,e.materials.push(r)}return t.uuid},a=function(e){var t={};if(t.uuid=e.uuid,t.type=e.type,""!==e.name&&(t.name=e.name),"{}"!==JSON.stringify(e.userData)&&(t.userData=e.userData),e.visible!==!0&&(t.visible=e.visible),e instanceof THREE.PerspectiveCamera?(t.fov=e.fov,t.aspect=e.aspect,t.near=e.near,t.far=e.far):e instanceof THREE.OrthographicCamera?(t.left=e.left,t.right=e.right,t.top=e.top,t.bottom=e.bottom,t.near=e.near,t.far=e.far):e instanceof THREE.AmbientLight?t.color=e.color.getHex():e instanceof THREE.DirectionalLight?(t.color=e.color.getHex(),t.intensity=e.intensity):e instanceof THREE.PointLight?(t.color=e.color.getHex(),t.intensity=e.intensity,t.distance=e.distance):e instanceof THREE.SpotLight?(t.color=e.color.getHex(),t.intensity=e.intensity,t.distance=e.distance,t.angle=e.angle,t.exponent=e.exponent):e instanceof THREE.HemisphereLight?(t.color=e.color.getHex(),t.groundColor=e.groundColor.getHex()):e instanceof THREE.Mesh?(t.geometry=r(e.geometry),t.material=i(e.material)):e instanceof THREE.Line?(t.geometry=r(e.geometry),t.material=i(e.material)):e instanceof THREE.Sprite&&(t.material=i(e.material)),t.matrix=e.matrix.toArray(),e.children.length>0){t.children=[];for(var n=0;n<e.children.length;n++)t.children.push(a(e.children[n]))}return t};return e.object=a(this),e},clone:function(e,t){if(void 0===e&&(e=new THREE.Object3D),void 0===t&&(t=!0),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.quaternion.copy(this.quaternion),e.scale.copy(this.scale),e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled,e.userData=JSON.parse(JSON.stringify(this.userData)),t===!0)for(var r=0;r<this.children.length;r++){var n=this.children[r];e.add(n.clone())}return e}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Face3=function(e,t,r,n,i,a){this.a=e,this.b=t,this.c=r,this.normal=n instanceof THREE.Vector3?n:new THREE.Vector3,this.vertexNormals=n instanceof Array?n:[],this.color=i instanceof THREE.Color?i:new THREE.Color,this.vertexColors=i instanceof Array?i:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.materialIndex=this.materialIndex;for(var t=0,r=this.vertexNormals.length;r>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(var t=0,r=this.vertexColors.length;r>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(var t=0,r=this.vertexTangents.length;r>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,r,n,i,a,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(e,t,r,i,a,o)},THREE.BufferAttribute=function(e,t){this.array=e,this.itemSize=t,this.needsUpdate=!1},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},copyAt:function(e,t,r){e*=this.itemSize,r*=t.itemSize;for(var n=0,i=this.itemSize;i>n;n++)this.array[e+n]=t.array[r+n]},set:function(e){return this.array.set(e),this},setX:function(e,t){return this.array[e*this.itemSize]=t,this},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,n){return e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this.array[e+2]=n,this},setXYZW:function(e,t,r,n,i){return e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this.array[e+2]=n,this.array[e+3]=i,this},clone:function(){return new THREE.BufferAttribute(new this.array.constructor(this.array),this.itemSize)}},THREE.Int8Attribute=function(e,t){return console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint8Attribute=function(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint8ClampedAttribute=function(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Int16Attribute=function(e,t){return console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint16Attribute=function(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Int32Attribute=function(e,t){return console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint32Attribute=function(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Float32Attribute=function(e,t){return console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Float64Attribute=function(e,t){return console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.attributes={},this.attributesKeys=[],this.drawcalls=[],this.offsets=this.drawcalls,this.boundingBox=null,this.boundingSphere=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,t){return t instanceof THREE.BufferAttribute==!1?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void(this.attributes[e]={array:arguments[1],itemSize:arguments[2]})):(this.attributes[e]=t,void(this.attributesKeys=Object.keys(this.attributes)))},getAttribute:function(e){return this.attributes[e]},addDrawCall:function(e,t,r){this.drawcalls.push({start:e,count:t,index:void 0!==r?r:0})},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToVector3Array(t.array),t.needsUpdate=!0);var r=this.attributes.normal;if(void 0!==r){var n=(new THREE.Matrix3).getNormalMatrix(e);n.applyToVector3Array(r.array),r.needsUpdate=!0}},center:function(){},fromGeometry:function(e,t){t=t||{vertexColors:THREE.NoColors};var r=e.vertices,n=e.faces,i=e.faceVertexUvs,a=t.vertexColors,o=i[0].length>0,s=3==n[0].vertexNormals.length,h=new Float32Array(3*n.length*3);this.addAttribute("position",new THREE.BufferAttribute(h,3));var l=new Float32Array(3*n.length*3);if(this.addAttribute("normal",new THREE.BufferAttribute(l,3)),a!==THREE.NoColors){var u=new Float32Array(3*n.length*3);this.addAttribute("color",new THREE.BufferAttribute(u,3))}if(o===!0){var f=new Float32Array(3*n.length*2);this.addAttribute("uv",new THREE.BufferAttribute(f,2))}for(var c=0,d=0,E=0;c<n.length;c++,d+=6,E+=9){var p=n[c],m=r[p.a],g=r[p.b],v=r[p.c];if(h[E]=m.x,h[E+1]=m.y,h[E+2]=m.z,h[E+3]=g.x,h[E+4]=g.y,h[E+5]=g.z,h[E+6]=v.x,h[E+7]=v.y,h[E+8]=v.z,s===!0){var T=p.vertexNormals[0],_=p.vertexNormals[1],x=p.vertexNormals[2];l[E]=T.x,l[E+1]=T.y,l[E+2]=T.z,l[E+3]=_.x,l[E+4]=_.y,l[E+5]=_.z,l[E+6]=x.x,l[E+7]=x.y,l[E+8]=x.z}else{var y=p.normal;l[E]=y.x,l[E+1]=y.y,l[E+2]=y.z,l[E+3]=y.x,l[E+4]=y.y,l[E+5]=y.z,l[E+6]=y.x,l[E+7]=y.y,l[E+8]=y.z}if(a===THREE.FaceColors){var R=p.color;u[E]=R.r,u[E+1]=R.g,u[E+2]=R.b,u[E+3]=R.r,u[E+4]=R.g,u[E+5]=R.b,u[E+6]=R.r,u[E+7]=R.g,u[E+8]=R.b}else if(a===THREE.VertexColors){var b=p.vertexColors[0],H=p.vertexColors[1],M=p.vertexColors[2];u[E]=b.r,u[E+1]=b.g,u[E+2]=b.b,u[E+3]=H.r,u[E+4]=H.g,u[E+5]=H.b,u[E+6]=M.r,u[E+7]=M.g,u[E+8]=M.b}if(o===!0){var w=i[0][c][0],S=i[0][c][1],A=i[0][c][2];f[d]=w.x,f[d+1]=w.y,f[d+2]=S.x,f[d+3]=S.y,f[d+4]=A.x,f[d+5]=A.y}}return this.computeBoundingSphere(),this},computeBoundingBox:function(){var e=new THREE.Vector3;return function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var t=this.attributes.position.array;if(t){var r=this.boundingBox;r.makeEmpty();for(var n=0,i=t.length;i>n;n+=3)e.set(t[n],t[n+1],t[n+2]),r.expandByPoint(e)}(void 0===t||0===t.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')}}(),computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position.array;if(r){e.makeEmpty();for(var n=this.boundingSphere.center,i=0,a=r.length;a>i;i+=3)t.set(r[i],r[i+1],r[i+2]),e.expandByPoint(t);e.center(n);for(var o=0,i=0,a=r.length;a>i;i+=3)t.set(r[i],r[i+1],r[i+2]),o=Math.max(o,n.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.attributes;if(e.position){var t=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(t.length),3));else for(var r=e.normal.array,n=0,i=r.length;i>n;n++)r[n]=0;var a,o,s,r=e.normal.array,h=new THREE.Vector3,l=new THREE.Vector3,u=new THREE.Vector3,f=new THREE.Vector3,c=new THREE.Vector3;if(e.index)for(var d=e.index.array,E=this.offsets.length>0?this.offsets:[{start:0,count:d.length,index:0}],p=0,m=E.length;m>p;++p)for(var g=E[p].start,v=E[p].count,T=E[p].index,n=g,i=g+v;i>n;n+=3)a=3*(T+d[n]),o=3*(T+d[n+1]),s=3*(T+d[n+2]),h.fromArray(t,a),l.fromArray(t,o),u.fromArray(t,s),f.subVectors(u,l),c.subVectors(h,l),f.cross(c),r[a]+=f.x,r[a+1]+=f.y,r[a+2]+=f.z,r[o]+=f.x,r[o+1]+=f.y,r[o+2]+=f.z,r[s]+=f.x,r[s+1]+=f.y,r[s+2]+=f.z;else for(var n=0,i=t.length;i>n;n+=9)h.fromArray(t,n),l.fromArray(t,n+3),u.fromArray(t,n+6),f.subVectors(u,l),c.subVectors(h,l),f.cross(c),r[n]=f.x,r[n+1]=f.y,r[n+2]=f.z,r[n+3]=f.x,r[n+4]=f.y,r[n+5]=f.z,r[n+6]=f.x,r[n+7]=f.y,r[n+8]=f.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},computeTangents:function(){function e(e,t,r){A.fromArray(n,3*e),C.fromArray(n,3*t),F.fromArray(n,3*r),P.fromArray(a,2*e),B.fromArray(a,2*t),D.fromArray(a,2*r),f=C.x-A.x,c=F.x-A.x,d=C.y-A.y,E=F.y-A.y,p=C.z-A.z,m=F.z-A.z,g=B.x-P.x,v=D.x-P.x,T=B.y-P.y,_=D.y-P.y,x=1/(g*_-v*T),U.set((_*f-T*c)*x,(_*d-T*E)*x,(_*p-T*m)*x),L.set((g*c-v*f)*x,(g*E-v*d)*x,(g*m-v*p)*x),h[e].add(U),h[t].add(U),h[r].add(U),l[e].add(L),l[t].add(L),l[r].add(L)}function t(e){j.fromArray(i,3*e),Y.copy(j),I=h[e],W.copy(I),W.sub(j.multiplyScalar(j.dot(I))).normalize(),X.crossVectors(Y,I),G=X.dot(l[e]),O=0>G?-1:1,s[4*e]=W.x,s[4*e+1]=W.y,s[4*e+2]=W.z,s[4*e+3]=O}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var r=this.attributes.index.array,n=this.attributes.position.array,i=this.attributes.normal.array,a=this.attributes.uv.array,o=n.length/3;void 0===this.attributes.tangent&&this.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*o),4));for(var s=this.attributes.tangent.array,h=[],l=[],u=0;o>u;u++)h[u]=new THREE.Vector3,l[u]=new THREE.Vector3;var f,c,d,E,p,m,g,v,T,_,x,y,R,b,H,M,w,S,A=new THREE.Vector3,C=new THREE.Vector3,F=new THREE.Vector3,P=new THREE.Vector2,B=new THREE.Vector2,D=new THREE.Vector2,U=new THREE.Vector3,L=new THREE.Vector3;0===this.drawcalls.length&&this.addDrawCall(0,r.length,0);var N=this.drawcalls;for(b=0,H=N.length;H>b;++b){var z=N[b].start,V=N[b].count,k=N[b].index;for(y=z,R=z+V;R>y;y+=3)M=k+r[y],w=k+r[y+1],S=k+r[y+2],e(M,w,S)}var O,I,G,W=new THREE.Vector3,X=new THREE.Vector3,j=new THREE.Vector3,Y=new THREE.Vector3;for(b=0,H=N.length;H>b;++b){var z=N[b].start,V=N[b].count,k=N[b].index;for(y=z,R=z+V;R>y;y+=3)M=k+r[y],w=k+r[y+1],S=k+r[y+2],t(M),t(w),t(S)}},computeOffsets:function(e){var t=e;void 0===e&&(t=65535);for(var r=(Date.now(),this.attributes.index.array),n=this.attributes.position.array,i=(n.length/3,r.length/3),a=new Uint16Array(r.length),o=0,s=0,h=[{start:0,count:0,index:0}],l=h[0],u=0,f=0,c=new Int32Array(6),d=new Int32Array(n.length),E=new Int32Array(n.length),p=0;p<n.length;p++)d[p]=-1,E[p]=-1;for(var m=0;i>m;m++){f=0;for(var g=0;3>g;g++){var v=r[3*m+g];-1==d[v]?(c[2*g]=v,c[2*g+1]=-1,f++):d[v]<l.index?(c[2*g]=v,c[2*g+1]=-1,u++):(c[2*g]=v,c[2*g+1]=d[v])}var T=s+f;if(T>l.index+t){var _={start:o,count:0,index:s};h.push(_),l=_;for(var x=0;6>x;x+=2){var y=c[x+1];y>-1&&y<l.index&&(c[x+1]=-1)}}for(var x=0;6>x;x+=2){var v=c[x],y=c[x+1];-1===y&&(y=s++),d[v]=y,E[y]=v,a[o++]=y-l.index,l.count++}}return this.reorderBuffers(a,E,s),this.offsets=h,h},merge:function(e,t){if(e instanceof THREE.BufferGeometry==!1)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0);var r=this.attributes;for(var n in r)if(void 0!==e.attributes[n])for(var i=r[n],a=i.array,o=e.attributes[n],s=o.array,h=o.itemSize,l=0,u=h*t;l<s.length;l++,u++)a[u]=s[l];return this},normalizeNormals:function(){for(var e,t,r,n,i=this.attributes.normal.array,a=0,o=i.length;o>a;a+=3)e=i[a],t=i[a+1],r=i[a+2],n=1/Math.sqrt(e*e+t*t+r*r),i[a]*=n,i[a+1]*=n,i[a+2]*=n},reorderBuffers:function(e,t,r){var n={};for(var i in this.attributes)if("index"!=i){var a=this.attributes[i].array;n[i]=new a.constructor(this.attributes[i].itemSize*r)}for(var o=0;r>o;o++){var s=t[o];for(var i in this.attributes)if("index"!=i)for(var h=this.attributes[i].array,l=this.attributes[i].itemSize,u=n[i],f=0;l>f;f++)u[o*l+f]=h[s*l+f]}this.attributes.index.array=e;for(var i in this.attributes)"index"!=i&&(this.attributes[i].array=n[i],this.attributes[i].numItems=this.attributes[i].itemSize*r)},toJSON:function(){var e={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type,data:{attributes:{}}},t=this.attributes,r=this.offsets,n=this.boundingSphere;for(var i in t){for(var a=t[i],o=[],s=a.array,h=0,l=s.length;l>h;h++)o[h]=s[h];e.data.attributes[i]={itemSize:a.itemSize,type:a.array.constructor.name,array:o}}return r.length>0&&(e.data.offsets=JSON.parse(JSON.stringify(r))),null!==n&&(e.data.boundingSphere={center:n.center.toArray(),radius:n.radius}),e},clone:function(){var e=new THREE.BufferGeometry;for(var t in this.attributes){var r=this.attributes[t];e.addAttribute(t,r.clone())}for(var n=0,i=this.offsets.length;i>n;n++){var a=this.offsets[n];e.offsets.push({start:a.start,index:a.index,count:a.count})}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),r=0,n=this.vertices.length;n>r;r++){var i=this.vertices[r];i.applyMatrix4(e)}for(var r=0,n=this.faces.length;n>r;r++){var a=this.faces[r];a.normal.applyMatrix3(t).normalize();for(var o=0,s=a.vertexNormals.length;s>o;o++)a.vertexNormals[o].applyMatrix3(t).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},fromBufferGeometry:function(e){for(var t=this,r=e.attributes,n=r.position.array,i=void 0!==r.index?r.index.array:void 0,a=void 0!==r.normal?r.normal.array:void 0,o=void 0!==r.color?r.color.array:void 0,s=void 0!==r.uv?r.uv.array:void 0,h=[],l=[],u=0,f=0;u<n.length;u+=3,f+=2)t.vertices.push(new THREE.Vector3(n[u],n[u+1],n[u+2])),void 0!==a&&h.push(new THREE.Vector3(a[u],a[u+1],a[u+2])),void 0!==o&&t.colors.push(new THREE.Color(o[u],o[u+1],o[u+2])),void 0!==s&&l.push(new THREE.Vector2(s[f],s[f+1]));var c=function(e,r,n){var i=void 0!==a?[h[e].clone(),h[r].clone(),h[n].clone()]:[],u=void 0!==o?[t.colors[e].clone(),t.colors[r].clone(),t.colors[n].clone()]:[];t.faces.push(new THREE.Face3(e,r,n,i,u)),void 0!==s&&t.faceVertexUvs[0].push([l[e].clone(),l[r].clone(),l[n].clone()])};if(void 0!==i)for(var u=0;u<i.length;u+=3)c(i[u],i[u+1],i[u+2]);else for(var u=0;u<n.length/3;u+=3)c(u,u+1,u+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=new THREE.Vector3;return e.addVectors(this.boundingBox.min,this.boundingBox.max),e.multiplyScalar(-.5),this.applyMatrix((new THREE.Matrix4).makeTranslation(e.x,e.y,e.z)),this.computeBoundingBox(),e},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,r=0,n=this.faces.length;n>r;r++){var i=this.faces[r],a=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,o),t.subVectors(a,o),e.cross(t),e.normalize(),i.normal.copy(e)}},computeVertexNormals:function(e){var t,r,n,i,a,o;for(o=new Array(this.vertices.length),t=0,r=this.vertices.length;r>t;t++)o[t]=new THREE.Vector3;if(e){{var s,h,l,u=new THREE.Vector3,f=new THREE.Vector3;new THREE.Vector3,new THREE.Vector3,new THREE.Vector3}for(n=0,i=this.faces.length;i>n;n++)a=this.faces[n],s=this.vertices[a.a],h=this.vertices[a.b],l=this.vertices[a.c],u.subVectors(l,h),f.subVectors(s,h),u.cross(f),o[a.a].add(u),o[a.b].add(u),o[a.c].add(u)}else for(n=0,i=this.faces.length;i>n;n++)a=this.faces[n],o[a.a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(t=0,r=this.vertices.length;r>t;t++)o[t].normalize();for(n=0,i=this.faces.length;i>n;n++)a=this.faces[n],a.vertexNormals[0]=o[a.a].clone(),a.vertexNormals[1]=o[a.b].clone(),a.vertexNormals[2]=o[a.c].clone()},computeMorphNormals:function(){var e,t,r,n,i;for(r=0,n=this.faces.length;n>r;r++)for(i=this.faces[r],i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0,t=i.vertexNormals.length;t>e;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone();var a=new THREE.Geometry;for(a.faces=this.faces,e=0,t=this.morphTargets.length;t>e;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o,s,h=this.morphNormals[e].faceNormals,l=this.morphNormals[e].vertexNormals;for(r=0,n=this.faces.length;n>r;r++)o=new THREE.Vector3,s={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},h.push(o),l.push(s)}var u=this.morphNormals[e];a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals();var o,s;for(r=0,n=this.faces.length;n>r;r++)i=this.faces[r],o=u.faceNormals[r],s=u.vertexNormals[r],o.copy(i.normal),s.a.copy(i.vertexNormals[0]),s.b.copy(i.vertexNormals[1]),s.c.copy(i.vertexNormals[2])
}for(r=0,n=this.faces.length;n>r;r++)i=this.faces[r],i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeTangents:function(){function e(e,t,r,n,i,a,o){l=e.vertices[t],u=e.vertices[r],f=e.vertices[n],c=h[i],d=h[a],E=h[o],p=u.x-l.x,m=f.x-l.x,g=u.y-l.y,v=f.y-l.y,T=u.z-l.z,_=f.z-l.z,x=d.x-c.x,y=E.x-c.x,R=d.y-c.y,b=E.y-c.y,H=1/(x*b-y*R),F.set((b*p-R*m)*H,(b*g-R*v)*H,(b*T-R*_)*H),P.set((x*m-y*p)*H,(x*v-y*g)*H,(x*_-y*T)*H),A[t].add(F),A[r].add(F),A[n].add(F),C[t].add(P),C[r].add(P),C[n].add(P)}var t,r,n,i,a,o,s,h,l,u,f,c,d,E,p,m,g,v,T,_,x,y,R,b,H,M,w,S,A=[],C=[],F=new THREE.Vector3,P=new THREE.Vector3,B=new THREE.Vector3,D=new THREE.Vector3,U=new THREE.Vector3;for(n=0,i=this.vertices.length;i>n;n++)A[n]=new THREE.Vector3,C[n]=new THREE.Vector3;for(t=0,r=this.faces.length;r>t;t++)s=this.faces[t],h=this.faceVertexUvs[0][t],e(this,s.a,s.b,s.c,0,1,2);var L=["a","b","c","d"];for(t=0,r=this.faces.length;r>t;t++)for(s=this.faces[t],a=0;a<Math.min(s.vertexNormals.length,3);a++)U.copy(s.vertexNormals[a]),o=s[L[a]],M=A[o],B.copy(M),B.sub(U.multiplyScalar(U.dot(M))).normalize(),D.crossVectors(s.vertexNormals[a],M),w=D.dot(C[o]),S=0>w?-1:1,s.vertexTangents[a]=new THREE.Vector4(B.x,B.y,B.z,S);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,n=t.length;n>r;r++)r>0&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(e instanceof THREE.Geometry==!1)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);var n,i=this.vertices.length,a=this.vertices,o=e.vertices,s=this.faces,h=e.faces,l=this.faceVertexUvs[0],u=e.faceVertexUvs[0];void 0===r&&(r=0),void 0!==t&&(n=(new THREE.Matrix3).getNormalMatrix(t));for(var f=0,c=o.length;c>f;f++){var d=o[f],E=d.clone();void 0!==t&&E.applyMatrix4(t),a.push(E)}for(f=0,c=h.length;c>f;f++){var p,m,g,v=h[f],T=v.vertexNormals,_=v.vertexColors;p=new THREE.Face3(v.a+i,v.b+i,v.c+i),p.normal.copy(v.normal),void 0!==n&&p.normal.applyMatrix3(n).normalize();for(var x=0,y=T.length;y>x;x++)m=T[x].clone(),void 0!==n&&m.applyMatrix3(n).normalize(),p.vertexNormals.push(m);p.color.copy(v.color);for(var x=0,y=_.length;y>x;x++)g=_[x],p.vertexColors.push(g.clone());p.materialIndex=v.materialIndex+r,s.push(p)}for(f=0,c=u.length;c>f;f++){var R=u[f],b=[];if(void 0!==R){for(var x=0,y=R.length;y>x;x++)b.push(R[x].clone());l.push(b)}}},mergeMesh:function(e){return e instanceof THREE.Mesh==!1?void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e):(e.matrixAutoUpdate&&e.updateMatrix(),void this.merge(e.geometry,e.matrix))},mergeVertices:function(){var e,t,r,n,i,a,o,s,h={},l=[],u=[],f=4,c=Math.pow(10,f);for(r=0,n=this.vertices.length;n>r;r++)e=this.vertices[r],t=Math.round(e.x*c)+"_"+Math.round(e.y*c)+"_"+Math.round(e.z*c),void 0===h[t]?(h[t]=r,l.push(this.vertices[r]),u[r]=l.length-1):u[r]=u[h[t]];var d=[];for(r=0,n=this.faces.length;n>r;r++){i=this.faces[r],i.a=u[i.a],i.b=u[i.b],i.c=u[i.c],a=[i.a,i.b,i.c];for(var E=-1,p=0;3>p;p++)if(a[p]==a[(p+1)%3]){E=p,d.push(r);break}}for(r=d.length-1;r>=0;r--){var m=d[r];for(this.faces.splice(m,1),o=0,s=this.faceVertexUvs.length;s>o;o++)this.faceVertexUvs[o].splice(m,1)}var g=this.vertices.length-l.length;return this.vertices=l,g},toJSON:function(){function e(e,t,r){return r?e|1<<t:e&~(1<<t)}function t(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==c[t]?c[t]:(c[t]=f.length/3,f.push(e.x,e.y,e.z),c[t])}function r(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==E[t]?E[t]:(E[t]=d.length,d.push(e.getHex()),E[t])}function n(e){var t=e.x.toString()+e.y.toString();return void 0!==m[t]?m[t]:(m[t]=p.length/2,p.push(e.x,e.y),m[t])}var i={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type};if(""!==this.name&&(i.name=this.name),void 0!==this.parameters){var a=this.parameters;for(var o in a)void 0!==a[o]&&(i[o]=a[o]);return i}for(var s=[],h=0;h<this.vertices.length;h++){var l=this.vertices[h];s.push(l.x,l.y,l.z)}for(var u=[],f=[],c={},d=[],E={},p=[],m={},h=0;h<this.faces.length;h++){var g=this.faces[h],v=!1,T=!1,_=void 0!==this.faceVertexUvs[0][h],x=g.normal.length()>0,y=g.vertexNormals.length>0,R=1!==g.color.r||1!==g.color.g||1!==g.color.b,b=g.vertexColors.length>0,H=0;if(H=e(H,0,0),H=e(H,1,v),H=e(H,2,T),H=e(H,3,_),H=e(H,4,x),H=e(H,5,y),H=e(H,6,R),H=e(H,7,b),u.push(H),u.push(g.a,g.b,g.c),_){var M=this.faceVertexUvs[0][h];u.push(n(M[0]),n(M[1]),n(M[2]))}if(x&&u.push(t(g.normal)),y){var w=g.vertexNormals;u.push(t(w[0]),t(w[1]),t(w[2]))}if(R&&u.push(r(g.color)),b){var S=g.vertexColors;u.push(r(S[0]),r(S[1]),r(S[2]))}}return i.data={},i.data.vertices=s,i.data.normals=f,d.length>0&&(i.data.colors=d),p.length>0&&(i.data.uvs=[p]),i.data.faces=u,i},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,r=0,n=t.length;n>r;r++)e.vertices.push(t[r].clone());for(var i=this.faces,r=0,n=i.length;n>r;r++)e.faces.push(i[r].clone());for(var r=0,n=this.faceVertexUvs.length;n>r;r++){var a=this.faceVertexUvs[r];void 0===e.faceVertexUvs[r]&&(e.faceVertexUvs[r]=[]);for(var o=0,s=a.length;s>o;o++){for(var h=a[o],l=[],u=0,f=h.length;f>u;u++){var c=h[u];l.push(c.clone())}e.faceVertexUvs[r].push(l)}}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Camera=function(){THREE.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.getWorldDirection=function(){var e=new THREE.Quaternion;return function(t){var r=t||new THREE.Vector3;return this.getWorldQuaternion(e),r.set(0,0,-1).applyQuaternion(e)}}(),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(e){return void 0===e&&(e=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,e),e.matrixWorldInverse.copy(this.matrixWorldInverse),e.projectionMatrix.copy(this.projectionMatrix),e},THREE.PerspectiveCamera=function(e,t,r,n){THREE.Camera.call(this),this.type="PerspectiveCamera",this.zoom=1,this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==r?r:.1,this.far=void 0!==n?n:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,n,i,a){this.fullWidth=e,this.fullHeight=t,this.x=r,this.y=n,this.width=i,this.height=a,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var e=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var t=this.fullWidth/this.fullHeight,r=Math.tan(THREE.Math.degToRad(.5*e))*this.near,n=-r,i=t*n,a=t*r,o=Math.abs(a-i),s=Math.abs(r-n);this.projectionMatrix.makeFrustum(i+this.x*o/this.fullWidth,i+(this.x+this.width)*o/this.fullWidth,r-(this.y+this.height)*s/this.fullHeight,r-this.y*s/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(e,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,e),e.zoom=this.zoom,e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e.projectionMatrix.copy(this.projectionMatrix),e},THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Material",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0!==r){if(t in this){var n=this[t];n instanceof THREE.Color?n.set(r):n instanceof THREE.Vector3&&r instanceof THREE.Vector3?n.copy(r):this[t]="overdraw"==t?Number(r):r}}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},toJSON:function(){var e={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type};return""!==this.name&&(e.name=this.name),this instanceof THREE.MeshBasicMaterial?(e.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(e.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.MeshLambertMaterial?(e.color=this.color.getHex(),e.ambient=this.ambient.getHex(),e.emissive=this.emissive.getHex(),this.vertexColors!==THREE.NoColors&&(e.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.MeshPhongMaterial?(e.color=this.color.getHex(),e.ambient=this.ambient.getHex(),e.emissive=this.emissive.getHex(),e.specular=this.specular.getHex(),e.shininess=this.shininess,this.vertexColors!==THREE.NoColors&&(e.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.MeshNormalMaterial?(this.shading!==THREE.FlatShading&&(e.shading=this.shading),this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.MeshDepthMaterial?(this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.ShaderMaterial?(e.uniforms=this.uniforms,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader):this instanceof THREE.SpriteMaterial&&(e.color=this.color.getHex()),this.opacity<1&&(e.opacity=this.opacity),this.transparent!==!1&&(e.transparent=this.transparent),this.wireframe!==!1&&(e.wireframe=this.wireframe),e},clone:function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.type="MeshBasicMaterial",this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.alphaMap=this.alphaMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.type="SpriteMaterial",this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(e)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial,THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.rotation=this.rotation,e.fog=this.fog,e},THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.type="LineBasicMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.attributes=null,this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.Texture=function(e,t,r,n,i,a,o,s,h){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.image=void 0!==e?e:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:THREE.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==n?n:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==i?i:THREE.LinearFilter,this.minFilter=void 0!==a?a:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==o?o:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){e===!0&&this.update(),this._needsUpdate=e},clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.Group=function(){THREE.Object3D.call(this),this.type="Group"},THREE.Group.prototype=Object.create(THREE.Object3D.prototype),THREE.Group.prototype.constructor=THREE.Group,THREE.PointCloud=function(e,t){THREE.Object3D.call(this),this.type="PointCloud",this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.PointCloudMaterial({color:16777215*Math.random()})},THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype),THREE.PointCloud.prototype.constructor=THREE.PointCloud,THREE.PointCloud.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray;return function(r,n){var i=this,a=i.geometry,o=r.params.PointCloud.threshold;if(e.getInverse(this.matrixWorld),t.copy(r.ray).applyMatrix4(e),null===a.boundingBox||t.isIntersectionBox(a.boundingBox)!==!1){var s=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=new THREE.Vector3,l=function(e,a){var o=t.distanceToPoint(e);if(s>o){var h=t.closestPointToPoint(e);h.applyMatrix4(i.matrixWorld);var l=r.ray.origin.distanceTo(h);n.push({distance:l,distanceToRay:o,point:h.clone(),index:a,face:null,object:i})}};if(a instanceof THREE.BufferGeometry){var u=a.attributes,f=u.position.array;if(void 0!==u.index){var c=u.index.array,d=a.offsets;if(0===d.length){var E={start:0,count:c.length,index:0};d=[E]}for(var p=0,m=d.length;m>p;++p)for(var g=d[p].start,v=d[p].count,T=d[p].index,_=g,x=g+v;x>_;_++){var y=T+c[_];h.fromArray(f,3*y),l(h,y)}}else for(var R=f.length/3,_=0;R>_;_++)h.set(f[3*_],f[3*_+1],f[3*_+2]),l(h,_)}else for(var b=this.geometry.vertices,_=0;_<b.length;_++)l(b[_],_)}}}(),THREE.PointCloud.prototype.clone=function(e){return void 0===e&&(e=new THREE.PointCloud(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud."),new THREE.PointCloud(e,t)},THREE.Line=function(e,t,r){THREE.Object3D.call(this),this.type="Line",this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.mode=void 0!==r?r:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.constructor=THREE.Line,THREE.Line.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray,r=new THREE.Sphere;return function(n,i){var a=n.linePrecision,o=a*a,s=this.geometry;if(null===s.boundingSphere&&s.computeBoundingSphere(),r.copy(s.boundingSphere),r.applyMatrix4(this.matrixWorld),n.ray.isIntersectionSphere(r)!==!1){e.getInverse(this.matrixWorld),t.copy(n.ray).applyMatrix4(e);var h=new THREE.Vector3,l=new THREE.Vector3,u=new THREE.Vector3,f=new THREE.Vector3,c=this.mode===THREE.LineStrip?1:2;if(s instanceof THREE.BufferGeometry){var d=s.attributes;if(void 0!==d.index){var E=d.index.array,p=d.position.array,m=s.offsets;0===m.length&&(m=[{start:0,count:E.length,index:0}]);for(var g=0;g<m.length;g++)for(var v=m[g].start,T=m[g].count,_=m[g].index,x=v;v+T-1>x;x+=c){var y=_+E[x],R=_+E[x+1];h.fromArray(p,3*y),l.fromArray(p,3*R);var b=t.distanceSqToSegment(h,l,f,u);if(!(b>o)){var H=t.origin.distanceTo(f);H<n.near||H>n.far||i.push({distance:H,point:u.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}else for(var p=d.position.array,x=0;x<p.length/3-1;x+=c){h.fromArray(p,3*x),l.fromArray(p,3*x+3);var b=t.distanceSqToSegment(h,l,f,u);if(!(b>o)){var H=t.origin.distanceTo(f);H<n.near||H>n.far||i.push({distance:H,point:u.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}else if(s instanceof THREE.Geometry)for(var M=s.vertices,w=M.length,x=0;w-1>x;x+=c){var b=t.distanceSqToSegment(M[x],M[x+1],f,u);if(!(b>o)){var H=t.origin.distanceTo(f);H<n.near||H>n.far||i.push({distance:H,point:u.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}}}(),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.mode)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray,r=new THREE.Sphere,n=new THREE.Vector3,i=new THREE.Vector3,a=new THREE.Vector3;return function(o,s){var h=this.geometry;if(null===h.boundingSphere&&h.computeBoundingSphere(),r.copy(h.boundingSphere),r.applyMatrix4(this.matrixWorld),o.ray.isIntersectionSphere(r)!==!1&&(e.getInverse(this.matrixWorld),t.copy(o.ray).applyMatrix4(e),null===h.boundingBox||t.isIntersectionBox(h.boundingBox)!==!1))if(h instanceof THREE.BufferGeometry){var l=this.material;if(void 0===l)return;var u,f,c,d=h.attributes,E=o.precision;if(void 0!==d.index){var p=d.index.array,m=d.position.array,g=h.offsets;0===g.length&&(g=[{start:0,count:p.length,index:0}]);for(var v=0,T=g.length;T>v;++v)for(var _=g[v].start,x=g[v].count,y=g[v].index,R=_,b=_+x;b>R;R+=3){if(u=y+p[R],f=y+p[R+1],c=y+p[R+2],n.fromArray(m,3*u),i.fromArray(m,3*f),a.fromArray(m,3*c),l.side===THREE.BackSide)var H=t.intersectTriangle(a,i,n,!0);else var H=t.intersectTriangle(n,i,a,l.side!==THREE.DoubleSide);if(null!==H){H.applyMatrix4(this.matrixWorld);var M=o.ray.origin.distanceTo(H);E>M||M<o.near||M>o.far||s.push({distance:M,point:H,face:new THREE.Face3(u,f,c,THREE.Triangle.normal(n,i,a)),faceIndex:null,object:this})}}}else for(var m=d.position.array,R=0,w=0,b=m.length;b>R;R+=3,w+=9){if(u=R,f=R+1,c=R+2,n.fromArray(m,w),i.fromArray(m,w+3),a.fromArray(m,w+6),l.side===THREE.BackSide)var H=t.intersectTriangle(a,i,n,!0);else var H=t.intersectTriangle(n,i,a,l.side!==THREE.DoubleSide);if(null!==H){H.applyMatrix4(this.matrixWorld);var M=o.ray.origin.distanceTo(H);E>M||M<o.near||M>o.far||s.push({distance:M,point:H,face:new THREE.Face3(u,f,c,THREE.Triangle.normal(n,i,a)),faceIndex:null,object:this})}}}else if(h instanceof THREE.Geometry)for(var u,f,c,S=!1,A=S===!0?this.material.materials:null,E=o.precision,C=h.vertices,F=0,P=h.faces.length;P>F;F++){var B=h.faces[F],l=S===!0?A[B.materialIndex]:this.material;if(void 0!==l){if(u=C[B.a],f=C[B.b],c=C[B.c],l.morphTargets===!0){var D=h.morphTargets,U=this.morphTargetInfluences;n.set(0,0,0),i.set(0,0,0),a.set(0,0,0);for(var L=0,N=D.length;N>L;L++){var z=U[L];if(0!==z){var V=D[L].vertices;n.x+=(V[B.a].x-u.x)*z,n.y+=(V[B.a].y-u.y)*z,n.z+=(V[B.a].z-u.z)*z,i.x+=(V[B.b].x-f.x)*z,i.y+=(V[B.b].y-f.y)*z,i.z+=(V[B.b].z-f.z)*z,a.x+=(V[B.c].x-c.x)*z,a.y+=(V[B.c].y-c.y)*z,a.z+=(V[B.c].z-c.z)*z}}n.add(u),i.add(f),a.add(c),u=n,f=i,c=a}if(l.side===THREE.BackSide)var H=t.intersectTriangle(c,f,u,!0);else var H=t.intersectTriangle(u,f,c,l.side!==THREE.DoubleSide);if(null!==H){H.applyMatrix4(this.matrixWorld);var M=o.ray.origin.distanceTo(H);E>M||M<o.near||M>o.far||s.push({distance:M,point:H,face:B,faceIndex:F,object:this})}}}}}(),THREE.Mesh.prototype.clone=function(e,t){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e,t),e},THREE.Sprite=function(){var e=new Uint16Array([0,1,2,0,2,3]),t=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),r=new Float32Array([0,0,1,0,1,1,0,1]),n=new THREE.BufferGeometry;return n.addAttribute("index",new THREE.BufferAttribute(e,1)),n.addAttribute("position",new THREE.BufferAttribute(t,3)),n.addAttribute("uv",new THREE.BufferAttribute(r,2)),function(e){THREE.Object3D.call(this),this.type="Sprite",this.geometry=n,this.material=void 0!==e?e:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var n=t.ray.distanceToPoint(e);n>this.scale.x||r.push({distance:n,point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.type="Scene",this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.clone=function(e){return void 0===e&&(e=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,e),null!==this.fog&&(e.fog=this.fog.clone()),null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone()),e.autoUpdate=this.autoUpdate,e.matrixAutoUpdate=this.matrixAutoUpdate,e},THREE.PlaneBufferGeometry=function(e,t,r,n){THREE.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};for(var i=e/2,a=t/2,o=r||1,s=n||1,h=o+1,l=s+1,u=e/o,f=t/s,c=new Float32Array(h*l*3),d=new Float32Array(h*l*3),E=new Float32Array(h*l*2),p=0,m=0,g=0;l>g;g++)for(var v=g*f-a,T=0;h>T;T++){var _=T*u-i;c[p]=_,c[p+1]=-v,d[p+2]=1,E[m]=T/o,E[m+1]=1-g/s,p+=3,m+=2}p=0;for(var x=new(c.length/3>65535?Uint32Array:Uint16Array)(o*s*6),g=0;s>g;g++)for(var T=0;o>T;T++){var y=T+h*g,R=T+h*(g+1),b=T+1+h*(g+1),H=T+1+h*g;x[p]=y,x[p+1]=R,x[p+2]=H,x[p+3]=R,x[p+4]=b,x[p+5]=H,p+=6}this.addAttribute("index",new THREE.BufferAttribute(x,1)),this.addAttribute("position",new THREE.BufferAttribute(c,3)),this.addAttribute("normal",new THREE.BufferAttribute(d,3)),this.addAttribute("uv",new THREE.BufferAttribute(E,2))},THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry,THREE.ShaderChunk={},THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n	if ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n",THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n	vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n	vec3 dirVector = normalize( lDirection.xyz );\n\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n	#ifdef DOUBLE_SIDED\n\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n		#ifdef WRAP_AROUND\n\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n		#endif\n\n	#endif\n\n	#ifdef WRAP_AROUND\n\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n		#ifdef DOUBLE_SIDED\n\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n		#endif\n\n	#endif\n\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n	#ifdef DOUBLE_SIDED\n\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n	#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n		#ifdef DOUBLE_SIDED\n\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n			#ifdef WRAP_AROUND\n\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n			#endif\n\n		#endif\n\n		#ifdef WRAP_AROUND\n\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n			#ifdef DOUBLE_SIDED\n\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n			#endif\n\n		#endif\n\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			float lDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n			lVector = normalize( lVector );\n\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n			#ifdef DOUBLE_SIDED\n\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n				#ifdef WRAP_AROUND\n\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n				#endif\n\n			#endif\n\n			#ifdef WRAP_AROUND\n\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n				#ifdef DOUBLE_SIDED\n\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n				#endif\n\n			#endif\n\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		float dotProduct = dot( transformedNormal, lVector );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif",THREE.ShaderChunk.default_vertex="#ifdef USE_SKINNING\n\n	vec4 mvPosition = modelViewMatrix * skinned;\n\n#elif defined( USE_MORPHTARGETS )\n\n	vec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#else\n\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n",THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	#ifdef USE_MORPHNORMALS\n\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n	#else\n\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif",THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n\n#endif",THREE.ShaderChunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n	normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	vec3 pointDiffuse = vec3( 0.0 );\n	vec3 pointSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n				// diffuse\n\n		float dotProduct = dot( normal, lVector );\n\n		#ifdef WRAP_AROUND\n\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		pointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n				// specular\n\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	vec3 spotDiffuse = vec3( 0.0 );\n	vec3 spotSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( spotLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n					// diffuse\n\n			float dotProduct = dot( normal, lVector );\n\n			#ifdef WRAP_AROUND\n\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n			#else\n\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n\n			#endif\n\n			spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n					// specular\n\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	vec3 dirDiffuse = vec3( 0.0 );\n	vec3 dirSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n		vec3 dirVector = normalize( lDirection.xyz );\n\n				// diffuse\n\n		float dotProduct = dot( normal, dirVector );\n\n		#ifdef WRAP_AROUND\n\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		dirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n		// specular\n\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n		/*\n		// fresnel term from skin shader\n		const float F0 = 0.128;\n\n		float base = 1.0 - dot( viewPosition, dirHalfVector );\n		float exponential = pow( base, 5.0 );\n\n		float fresnel = exponential + F0 * ( 1.0 - exponential );\n		*/\n\n		/*\n		// fresnel term from fresnel shader\n		const float mFresnelBias = 0.08;\n		const float mFresnelScale = 0.3;\n		const float mFresnelPower = 5.0;\n\n		float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n		*/\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		// 		dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	vec3 hemiDiffuse = vec3( 0.0 );\n	vec3 hemiSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		hemiDiffuse += diffuse * hemiColor;\n\n		// specular (sky light)\n\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n		// specular (ground light)\n\n		vec3 lVectorGround = -lVector;\n\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n		float dotProductGround = dot( normal, lVectorGround );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n	}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n	totalDiffuse += dirDiffuse;\n	totalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	totalDiffuse += hemiDiffuse;\n	totalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	totalDiffuse += pointDiffuse;\n	totalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	totalDiffuse += spotDiffuse;\n	totalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n	vec3 morphedNormal = vec3( 0.0 );\n\n	morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n	morphedNormal += normal;\n\n#endif",THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n			// Per-Pixel Tangent Space Normal Mapping\n			// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n",THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n\n#endif",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n	}\n\n#endif",THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	#ifdef GAMMA_INPUT\n\n		texelColor.xyz *= texelColor.xyz;\n\n	#endif\n\n	gl_FragColor = gl_FragColor * texelColor;\n\n#endif",THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n	vUv2 = uv2;\n\n#endif",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n	gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n	#ifdef GAMMA_INPUT\n\n		vColor = color * color;\n\n	#else\n\n		vColor = color;\n\n	#endif\n\n#endif",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n	#ifdef USE_MORPHTARGETS\n\n	vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n	vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n	#endif\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n\n#endif\n",THREE.ShaderChunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n	gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif",THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n",THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n		// Transforming Normal Vectors with the Inverse Transformation\n\n		vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n		#ifdef ENVMAP_MODE_REFLECTION\n\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n		#else\n\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		#endif\n\n	#else\n\n		vec3 reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n	#else\n		float flipNormal = 1.0;\n	#endif\n\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = clamp( flipNormal * reflectVec.y * 0.5 + 0.5, 0.0, 1.0);\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * 0.15915494309189533576888376337251 + 0.5; // reciprocal( 2 PI ) + 0.5\n		vec4 envColor = texture2D( envMap, sampleUV );\n		\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n\n	#ifdef GAMMA_INPUT\n\n		envColor.xyz *= envColor.xyz;\n\n	#endif\n\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_MIX )\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_ADD )\n\n		gl_FragColor.xyz += envColor.xyz * specularStrength * reflectivity;\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		const float LOG2 = 1.442695;\n		float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n		fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n			// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n			//	http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n			// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif",THREE.ShaderChunk.defaultnormal_vertex="#ifdef USE_SKINNING\n\n	vec3 objectNormal = skinnedNormal.xyz;\n\n#elif defined( USE_MORPHNORMALS )\n\n	vec3 objectNormal = morphedNormal;\n\n#else\n\n	vec3 objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n",THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n	gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n	gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n	morphed += position;\n\n#endif",THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n	worldNormal = normalize( worldNormal );\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	#ifdef ENVMAP_MODE_REFLECTION\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	#else\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n	#ifdef SHADOWMAP_DEBUG\n\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n	#endif\n\n	#ifdef SHADOWMAP_CASCADE\n\n		int inFrustumCount = 0;\n\n	#endif\n\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n				// if ( something && something ) breaks ATI OpenGL shader compiler\n				// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n				// don't shadow pixels outside of light frustum\n				// use just first frustum (for cascades)\n				// don't shadow pixels behind far plane of light frustum\n\n		#ifdef SHADOWMAP_CASCADE\n\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n		#else\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		#endif\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n			shadowCoord.z += shadowBias[ i ];\n\n			#if defined( SHADOWMAP_TYPE_PCF )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n		/*\n						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n						// must enroll loop manually\n\n				for ( float y = -1.25; y <= 1.25; y += 1.25 )\n					for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n						vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n								// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n								//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n						float fDepth = unpackDepth( rgbaDepth );\n\n						if ( fDepth < shadowCoord.z )\n							shadow += 1.0;\n\n				}\n\n				shadow /= 9.0;\n\n		*/\n\n				const float shadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#else\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n\n		// spot with multiple shadows is darker\n\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n		// spot with multiple shadows has the same color as single shadow spot\n\n		// 					shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n			#endif\n\n		}\n\n\n		#ifdef SHADOWMAP_DEBUG\n\n			#ifdef SHADOWMAP_CASCADE\n\n				if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#else\n\n				if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#endif\n\n		#endif\n\n	}\n\n	#ifdef GAMMA_OUTPUT\n\n		shadowColor *= shadowColor;\n\n	#endif\n\n	gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#elif defined( USE_MORPHTARGETS )\n\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n\n	#endif\n\n#endif",THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n	gl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n",THREE.UniformsUtils={merge:function(e){for(var t={},r=0;r<e.length;r++){var n=this.clone(e[r]);
for(var i in n)t[i]=n[i]}return t},clone:function(e){var t={};for(var r in e){t[r]={};for(var n in e[r]){var i=e[r][n];t[r][n]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i}}return t}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"	#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	#ifdef DOUBLE_SIDED","		if ( gl_FrontFacing )","			gl_FragColor.xyz *= vLightFront;","		else","			gl_FragColor.xyz *= vLightBack;","	#else","		gl_FragColor.xyz *= vLightFront;","	#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG","uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	#ifdef USE_SIZEATTENUATION","		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","	#else","		gl_PointSize = size;","	#endif","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vLineDistance = scale * lineDistance;","	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	if ( mod( vLineDistance, totalSize ) > dashSize ) {","		discard;","	}","	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		float depth = gl_FragDepthEXT / gl_FragCoord.w;","	#else","		float depth = gl_FragCoord.z / gl_FragCoord.w;","	#endif","	float color = 1.0 - smoothstep( mNear, mFar, depth );","	gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","	vWorldPosition = worldPosition.xyz;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","	vWorldPosition = worldPosition.xyz;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","vec3 direction = normalize( vWorldPosition );","vec2 sampleUV;","sampleUV.y = clamp( tFlip * direction.y * -0.5 + 0.5, 0.0, 1.0);","sampleUV.x = atan( direction.z, direction.x ) * 0.15915494309189533576888376337251 + 0.5;","gl_FragColor = texture2D( tEquirect, sampleUV );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","	res -= res.xxyz * bit_mask;","	return res;","}","void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","	#else","		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","	#endif","}"].join("\n")}},THREE.WebGLRenderer=function(e){function t(e){e.__webglVertexBuffer=Ht.createBuffer(),e.__webglColorBuffer=Ht.createBuffer(),Mt.info.memory.geometries++}function r(e){e.__webglVertexBuffer=Ht.createBuffer(),e.__webglColorBuffer=Ht.createBuffer(),e.__webglLineDistanceBuffer=Ht.createBuffer(),Mt.info.memory.geometries++}function n(e){e.__webglVertexBuffer=Ht.createBuffer(),e.__webglNormalBuffer=Ht.createBuffer(),e.__webglTangentBuffer=Ht.createBuffer(),e.__webglColorBuffer=Ht.createBuffer(),e.__webglUVBuffer=Ht.createBuffer(),e.__webglUV2Buffer=Ht.createBuffer(),e.__webglSkinIndicesBuffer=Ht.createBuffer(),e.__webglSkinWeightsBuffer=Ht.createBuffer(),e.__webglFaceBuffer=Ht.createBuffer(),e.__webglLineBuffer=Ht.createBuffer();var t=e.numMorphTargets;if(t){e.__webglMorphTargetsBuffers=[];for(var r=0,n=t;n>r;r++)e.__webglMorphTargetsBuffers.push(Ht.createBuffer())}var i=e.numMorphNormals;if(i){e.__webglMorphNormalsBuffers=[];for(var r=0,n=i;n>r;r++)e.__webglMorphNormalsBuffers.push(Ht.createBuffer())}Mt.info.memory.geometries++}function i(e){var t=e.geometry,r=e.material,n=t.vertices.length;if(r.attributes){void 0===t.__webglCustomAttributesList&&(t.__webglCustomAttributesList=[]);for(var i in r.attributes){var a=r.attributes[i];if(!a.__webglInitialized||a.createUniqueBuffers){a.__webglInitialized=!0;var o=1;"v2"===a.type?o=2:"v3"===a.type?o=3:"v4"===a.type?o=4:"c"===a.type&&(o=3),a.size=o,a.array=new Float32Array(n*o),a.buffer=Ht.createBuffer(),a.buffer.belongsToAttribute=i,a.needsUpdate=!0}t.__webglCustomAttributesList.push(a)}}}function a(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__sortArray=[],e.__webglParticleCount=r,i(t)}function o(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__lineDistanceArray=new Float32Array(1*r),e.__webglLineCount=r,i(t)}function s(e,t){var r=t.geometry,n=e.faces3,i=3*n.length,a=1*n.length,o=3*n.length,s=h(t,e);e.__vertexArray=new Float32Array(3*i),e.__normalArray=new Float32Array(3*i),e.__colorArray=new Float32Array(3*i),e.__uvArray=new Float32Array(2*i),r.faceVertexUvs.length>1&&(e.__uv2Array=new Float32Array(2*i)),r.hasTangents&&(e.__tangentArray=new Float32Array(4*i)),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*i),e.__skinWeightArray=new Float32Array(4*i));var l=null!==or.get("OES_element_index_uint")&&a>21845?Uint32Array:Uint16Array;e.__typeArray=l,e.__faceArray=new l(3*a),e.__lineArray=new l(2*o);var u=e.numMorphTargets;if(u){e.__morphTargetsArrays=[];for(var f=0,c=u;c>f;f++)e.__morphTargetsArrays.push(new Float32Array(3*i))}var d=e.numMorphNormals;if(d){e.__morphNormalsArrays=[];for(var f=0,c=d;c>f;f++)e.__morphNormalsArrays.push(new Float32Array(3*i))}if(e.__webglFaceCount=3*a,e.__webglLineCount=2*o,s.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var E in s.attributes){var p=s.attributes[E],m={};for(var g in p)m[g]=p[g];if(!m.__webglInitialized||m.createUniqueBuffers){m.__webglInitialized=!0;var v=1;"v2"===m.type?v=2:"v3"===m.type?v=3:"v4"===m.type?v=4:"c"===m.type&&(v=3),m.size=v,m.array=new Float32Array(i*v),m.buffer=Ht.createBuffer(),m.buffer.belongsToAttribute=E,p.needsUpdate=!0,m.__original=p}e.__webglCustomAttributesList.push(m)}}e.__inittedArrays=!0}function h(e){return e.material}function l(e){return e&&void 0!==e.shading&&e.shading===THREE.SmoothShading}function u(e,t){var r,n,i,a,o,s,h,l,u,f,c,d=e.vertices,E=d.length,p=e.colors,m=p.length,g=e.__vertexArray,v=e.__colorArray,T=(e.__sortArray,e.verticesNeedUpdate),_=(e.elementsNeedUpdate,e.colorsNeedUpdate),x=e.__webglCustomAttributesList;if(T){for(r=0;E>r;r++)i=d[r],a=3*r,g[a]=i.x,g[a+1]=i.y,g[a+2]=i.z;Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglVertexBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,g,t)}if(_){for(n=0;m>n;n++)o=p[n],a=3*n,v[a]=o.r,v[a+1]=o.g,v[a+2]=o.b;Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglColorBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,v,t)}if(x)for(s=0,h=x.length;h>s;s++){if(c=x[s],c.needsUpdate&&(void 0===c.boundTo||"vertices"===c.boundTo))if(u=c.value.length,a=0,1===c.size)for(l=0;u>l;l++)c.array[l]=c.value[l];else if(2===c.size)for(l=0;u>l;l++)f=c.value[l],c.array[a]=f.x,c.array[a+1]=f.y,a+=2;else if(3===c.size)if("c"===c.type)for(l=0;u>l;l++)f=c.value[l],c.array[a]=f.r,c.array[a+1]=f.g,c.array[a+2]=f.b,a+=3;else for(l=0;u>l;l++)f=c.value[l],c.array[a]=f.x,c.array[a+1]=f.y,c.array[a+2]=f.z,a+=3;else if(4===c.size)for(l=0;u>l;l++)f=c.value[l],c.array[a]=f.x,c.array[a+1]=f.y,c.array[a+2]=f.z,c.array[a+3]=f.w,a+=4;Ht.bindBuffer(Ht.ARRAY_BUFFER,c.buffer),Ht.bufferData(Ht.ARRAY_BUFFER,c.array,t),c.needsUpdate=!1}}function f(e,t){var r,n,i,a,o,s,h,l,u,f,c,d,E=e.vertices,p=e.colors,m=e.lineDistances,g=E.length,v=p.length,T=m.length,_=e.__vertexArray,x=e.__colorArray,y=e.__lineDistanceArray,R=e.verticesNeedUpdate,b=e.colorsNeedUpdate,H=e.lineDistancesNeedUpdate,M=e.__webglCustomAttributesList;if(R){for(r=0;g>r;r++)a=E[r],o=3*r,_[o]=a.x,_[o+1]=a.y,_[o+2]=a.z;Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglVertexBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,_,t)}if(b){for(n=0;v>n;n++)s=p[n],o=3*n,x[o]=s.r,x[o+1]=s.g,x[o+2]=s.b;Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglColorBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,x,t)}if(H){for(i=0;T>i;i++)y[i]=m[i];Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglLineDistanceBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,y,t)}if(M)for(h=0,l=M.length;l>h;h++)if(d=M[h],d.needsUpdate&&(void 0===d.boundTo||"vertices"===d.boundTo)){if(o=0,f=d.value.length,1===d.size)for(u=0;f>u;u++)d.array[u]=d.value[u];else if(2===d.size)for(u=0;f>u;u++)c=d.value[u],d.array[o]=c.x,d.array[o+1]=c.y,o+=2;else if(3===d.size)if("c"===d.type)for(u=0;f>u;u++)c=d.value[u],d.array[o]=c.r,d.array[o+1]=c.g,d.array[o+2]=c.b,o+=3;else for(u=0;f>u;u++)c=d.value[u],d.array[o]=c.x,d.array[o+1]=c.y,d.array[o+2]=c.z,o+=3;else if(4===d.size)for(u=0;f>u;u++)c=d.value[u],d.array[o]=c.x,d.array[o+1]=c.y,d.array[o+2]=c.z,d.array[o+3]=c.w,o+=4;Ht.bindBuffer(Ht.ARRAY_BUFFER,d.buffer),Ht.bufferData(Ht.ARRAY_BUFFER,d.array,t),d.needsUpdate=!1}}function c(e,t,r,n,i){if(e.__inittedArrays){var a,o,s,h,u,f,c,d,E,p,m,g,v,T,_,x,y,R,b,H,M,w,S,A,C,F,P,B,D,U,L,N,z,V,k,O,I,G,W,X,j,Y,q=l(i),K=0,Q=0,Z=0,J=0,$=0,et=0,tt=0,rt=0,nt=0,it=0,at=0,ot=0,st=0,ht=e.__vertexArray,lt=e.__uvArray,ut=e.__uv2Array,ft=e.__normalArray,ct=e.__tangentArray,dt=e.__colorArray,Et=e.__skinIndexArray,pt=e.__skinWeightArray,mt=e.__morphTargetsArrays,gt=e.__morphNormalsArrays,vt=e.__webglCustomAttributesList,Tt=e.__faceArray,_t=e.__lineArray,xt=t.geometry,yt=xt.verticesNeedUpdate,Rt=xt.elementsNeedUpdate,bt=xt.uvsNeedUpdate,Mt=xt.normalsNeedUpdate,wt=xt.tangentsNeedUpdate,St=xt.colorsNeedUpdate,At=xt.morphTargetsNeedUpdate,Ct=xt.vertices,Ft=e.faces3,Pt=xt.faces,Bt=xt.faceVertexUvs[0],Dt=xt.faceVertexUvs[1],Ut=(xt.colors,xt.skinIndices),Lt=xt.skinWeights,Nt=xt.morphTargets,zt=xt.morphNormals;if(yt){for(a=0,o=Ft.length;o>a;a++)h=Pt[Ft[a]],g=Ct[h.a],v=Ct[h.b],T=Ct[h.c],ht[Q]=g.x,ht[Q+1]=g.y,ht[Q+2]=g.z,ht[Q+3]=v.x,ht[Q+4]=v.y,ht[Q+5]=v.z,ht[Q+6]=T.x,ht[Q+7]=T.y,ht[Q+8]=T.z,Q+=9;Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglVertexBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,ht,r)}if(At)for(k=0,O=Nt.length;O>k;k++){for(at=0,a=0,o=Ft.length;o>a;a++)W=Ft[a],h=Pt[W],g=Nt[k].vertices[h.a],v=Nt[k].vertices[h.b],T=Nt[k].vertices[h.c],I=mt[k],I[at]=g.x,I[at+1]=g.y,I[at+2]=g.z,I[at+3]=v.x,I[at+4]=v.y,I[at+5]=v.z,I[at+6]=T.x,I[at+7]=T.y,I[at+8]=T.z,i.morphNormals&&(q?(X=zt[k].vertexNormals[W],R=X.a,b=X.b,H=X.c):(R=zt[k].faceNormals[W],b=R,H=R),G=gt[k],G[at]=R.x,G[at+1]=R.y,G[at+2]=R.z,G[at+3]=b.x,G[at+4]=b.y,G[at+5]=b.z,G[at+6]=H.x,G[at+7]=H.y,G[at+8]=H.z),at+=9;Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[k]),Ht.bufferData(Ht.ARRAY_BUFFER,mt[k],r),i.morphNormals&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[k]),Ht.bufferData(Ht.ARRAY_BUFFER,gt[k],r))}if(Lt.length){for(a=0,o=Ft.length;o>a;a++)h=Pt[Ft[a]],A=Lt[h.a],C=Lt[h.b],F=Lt[h.c],pt[it]=A.x,pt[it+1]=A.y,pt[it+2]=A.z,pt[it+3]=A.w,pt[it+4]=C.x,pt[it+5]=C.y,pt[it+6]=C.z,pt[it+7]=C.w,pt[it+8]=F.x,pt[it+9]=F.y,pt[it+10]=F.z,pt[it+11]=F.w,P=Ut[h.a],B=Ut[h.b],D=Ut[h.c],Et[it]=P.x,Et[it+1]=P.y,Et[it+2]=P.z,Et[it+3]=P.w,Et[it+4]=B.x,Et[it+5]=B.y,Et[it+6]=B.z,Et[it+7]=B.w,Et[it+8]=D.x,Et[it+9]=D.y,Et[it+10]=D.z,Et[it+11]=D.w,it+=12;it>0&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,Et,r),Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,pt,r))}if(St){for(a=0,o=Ft.length;o>a;a++)h=Pt[Ft[a]],c=h.vertexColors,d=h.color,3===c.length&&i.vertexColors===THREE.VertexColors?(M=c[0],w=c[1],S=c[2]):(M=d,w=d,S=d),dt[nt]=M.r,dt[nt+1]=M.g,dt[nt+2]=M.b,dt[nt+3]=w.r,dt[nt+4]=w.g,dt[nt+5]=w.b,dt[nt+6]=S.r,dt[nt+7]=S.g,dt[nt+8]=S.b,nt+=9;nt>0&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglColorBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,dt,r))}if(wt&&xt.hasTangents){for(a=0,o=Ft.length;o>a;a++)h=Pt[Ft[a]],E=h.vertexTangents,_=E[0],x=E[1],y=E[2],ct[tt]=_.x,ct[tt+1]=_.y,ct[tt+2]=_.z,ct[tt+3]=_.w,ct[tt+4]=x.x,ct[tt+5]=x.y,ct[tt+6]=x.z,ct[tt+7]=x.w,ct[tt+8]=y.x,ct[tt+9]=y.y,ct[tt+10]=y.z,ct[tt+11]=y.w,tt+=12;Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglTangentBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,ct,r)}if(Mt){for(a=0,o=Ft.length;o>a;a++)if(h=Pt[Ft[a]],u=h.vertexNormals,f=h.normal,3===u.length&&q)for(U=0;3>U;U++)N=u[U],ft[et]=N.x,ft[et+1]=N.y,ft[et+2]=N.z,et+=3;else for(U=0;3>U;U++)ft[et]=f.x,ft[et+1]=f.y,ft[et+2]=f.z,et+=3;Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglNormalBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,ft,r)}if(bt&&Bt){for(a=0,o=Ft.length;o>a;a++)if(s=Ft[a],p=Bt[s],void 0!==p)for(U=0;3>U;U++)z=p[U],lt[Z]=z.x,lt[Z+1]=z.y,Z+=2;Z>0&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglUVBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,lt,r))}if(bt&&Dt){for(a=0,o=Ft.length;o>a;a++)if(s=Ft[a],m=Dt[s],void 0!==m)for(U=0;3>U;U++)V=m[U],ut[J]=V.x,ut[J+1]=V.y,J+=2;J>0&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglUV2Buffer),Ht.bufferData(Ht.ARRAY_BUFFER,ut,r))}if(Rt){for(a=0,o=Ft.length;o>a;a++)Tt[$]=K,Tt[$+1]=K+1,Tt[$+2]=K+2,$+=3,_t[rt]=K,_t[rt+1]=K+1,_t[rt+2]=K,_t[rt+3]=K+2,_t[rt+4]=K+1,_t[rt+5]=K+2,rt+=6,K+=3;Ht.bindBuffer(Ht.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),Ht.bufferData(Ht.ELEMENT_ARRAY_BUFFER,Tt,r),Ht.bindBuffer(Ht.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),Ht.bufferData(Ht.ELEMENT_ARRAY_BUFFER,_t,r)}if(vt)for(U=0,L=vt.length;L>U;U++)if(Y=vt[U],Y.__original.needsUpdate){if(ot=0,st=0,1===Y.size){if(void 0===Y.boundTo||"vertices"===Y.boundTo)for(a=0,o=Ft.length;o>a;a++)h=Pt[Ft[a]],Y.array[ot]=Y.value[h.a],Y.array[ot+1]=Y.value[h.b],Y.array[ot+2]=Y.value[h.c],ot+=3;else if("faces"===Y.boundTo)for(a=0,o=Ft.length;o>a;a++)j=Y.value[Ft[a]],Y.array[ot]=j,Y.array[ot+1]=j,Y.array[ot+2]=j,ot+=3}else if(2===Y.size){if(void 0===Y.boundTo||"vertices"===Y.boundTo)for(a=0,o=Ft.length;o>a;a++)h=Pt[Ft[a]],g=Y.value[h.a],v=Y.value[h.b],T=Y.value[h.c],Y.array[ot]=g.x,Y.array[ot+1]=g.y,Y.array[ot+2]=v.x,Y.array[ot+3]=v.y,Y.array[ot+4]=T.x,Y.array[ot+5]=T.y,ot+=6;else if("faces"===Y.boundTo)for(a=0,o=Ft.length;o>a;a++)j=Y.value[Ft[a]],g=j,v=j,T=j,Y.array[ot]=g.x,Y.array[ot+1]=g.y,Y.array[ot+2]=v.x,Y.array[ot+3]=v.y,Y.array[ot+4]=T.x,Y.array[ot+5]=T.y,ot+=6}else if(3===Y.size){var Vt;if(Vt="c"===Y.type?["r","g","b"]:["x","y","z"],void 0===Y.boundTo||"vertices"===Y.boundTo)for(a=0,o=Ft.length;o>a;a++)h=Pt[Ft[a]],g=Y.value[h.a],v=Y.value[h.b],T=Y.value[h.c],Y.array[ot]=g[Vt[0]],Y.array[ot+1]=g[Vt[1]],Y.array[ot+2]=g[Vt[2]],Y.array[ot+3]=v[Vt[0]],Y.array[ot+4]=v[Vt[1]],Y.array[ot+5]=v[Vt[2]],Y.array[ot+6]=T[Vt[0]],Y.array[ot+7]=T[Vt[1]],Y.array[ot+8]=T[Vt[2]],ot+=9;else if("faces"===Y.boundTo)for(a=0,o=Ft.length;o>a;a++)j=Y.value[Ft[a]],g=j,v=j,T=j,Y.array[ot]=g[Vt[0]],Y.array[ot+1]=g[Vt[1]],Y.array[ot+2]=g[Vt[2]],Y.array[ot+3]=v[Vt[0]],Y.array[ot+4]=v[Vt[1]],Y.array[ot+5]=v[Vt[2]],Y.array[ot+6]=T[Vt[0]],Y.array[ot+7]=T[Vt[1]],Y.array[ot+8]=T[Vt[2]],ot+=9;else if("faceVertices"===Y.boundTo)for(a=0,o=Ft.length;o>a;a++)j=Y.value[Ft[a]],g=j[0],v=j[1],T=j[2],Y.array[ot]=g[Vt[0]],Y.array[ot+1]=g[Vt[1]],Y.array[ot+2]=g[Vt[2]],Y.array[ot+3]=v[Vt[0]],Y.array[ot+4]=v[Vt[1]],Y.array[ot+5]=v[Vt[2]],Y.array[ot+6]=T[Vt[0]],Y.array[ot+7]=T[Vt[1]],Y.array[ot+8]=T[Vt[2]],ot+=9}else if(4===Y.size)if(void 0===Y.boundTo||"vertices"===Y.boundTo)for(a=0,o=Ft.length;o>a;a++)h=Pt[Ft[a]],g=Y.value[h.a],v=Y.value[h.b],T=Y.value[h.c],Y.array[ot]=g.x,Y.array[ot+1]=g.y,Y.array[ot+2]=g.z,Y.array[ot+3]=g.w,Y.array[ot+4]=v.x,Y.array[ot+5]=v.y,Y.array[ot+6]=v.z,Y.array[ot+7]=v.w,Y.array[ot+8]=T.x,Y.array[ot+9]=T.y,Y.array[ot+10]=T.z,Y.array[ot+11]=T.w,ot+=12;else if("faces"===Y.boundTo)for(a=0,o=Ft.length;o>a;a++)j=Y.value[Ft[a]],g=j,v=j,T=j,Y.array[ot]=g.x,Y.array[ot+1]=g.y,Y.array[ot+2]=g.z,Y.array[ot+3]=g.w,Y.array[ot+4]=v.x,Y.array[ot+5]=v.y,Y.array[ot+6]=v.z,Y.array[ot+7]=v.w,Y.array[ot+8]=T.x,Y.array[ot+9]=T.y,Y.array[ot+10]=T.z,Y.array[ot+11]=T.w,ot+=12;else if("faceVertices"===Y.boundTo)for(a=0,o=Ft.length;o>a;a++)j=Y.value[Ft[a]],g=j[0],v=j[1],T=j[2],Y.array[ot]=g.x,Y.array[ot+1]=g.y,Y.array[ot+2]=g.z,Y.array[ot+3]=g.w,Y.array[ot+4]=v.x,Y.array[ot+5]=v.y,Y.array[ot+6]=v.z,Y.array[ot+7]=v.w,Y.array[ot+8]=T.x,Y.array[ot+9]=T.y,Y.array[ot+10]=T.z,Y.array[ot+11]=T.w,ot+=12;Ht.bindBuffer(Ht.ARRAY_BUFFER,Y.buffer),Ht.bufferData(Ht.ARRAY_BUFFER,Y.array,r)}n&&(delete e.__inittedArrays,delete e.__colorArray,delete e.__normalArray,delete e.__tangentArray,delete e.__uvArray,delete e.__uv2Array,delete e.__faceArray,delete e.__vertexArray,delete e.__lineArray,delete e.__skinIndexArray,delete e.__skinWeightArray)}}function d(e,t,r,n){for(var i=r.attributes,a=t.attributes,o=t.attributesKeys,s=0,h=o.length;h>s;s++){var l=o[s],u=a[l];if(u>=0){var f=i[l];if(void 0!==f){var c=f.itemSize;Ht.bindBuffer(Ht.ARRAY_BUFFER,f.buffer),p(u),Ht.vertexAttribPointer(u,c,Ht.FLOAT,!1,0,n*c*4)}else void 0!==e.defaultAttributeValues&&(2===e.defaultAttributeValues[l].length?Ht.vertexAttrib2fv(u,e.defaultAttributeValues[l]):3===e.defaultAttributeValues[l].length&&Ht.vertexAttrib3fv(u,e.defaultAttributeValues[l]))}}m()}function E(){for(var e=0,t=Jt.length;t>e;e++)Jt[e]=0}function p(e){Jt[e]=1,0===$t[e]&&(Ht.enableVertexAttribArray(e),$t[e]=1)}function m(){for(var e=0,t=$t.length;t>e;e++)$t[e]!==Jt[e]&&(Ht.disableVertexAttribArray(e),$t[e]=0)}function g(e,t,r){var n=e.program.attributes;if(-1!==r.morphTargetBase&&n.position>=0?(Ht.bindBuffer(Ht.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[r.morphTargetBase]),p(n.position),Ht.vertexAttribPointer(n.position,3,Ht.FLOAT,!1,0,0)):n.position>=0&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,t.__webglVertexBuffer),p(n.position),Ht.vertexAttribPointer(n.position,3,Ht.FLOAT,!1,0,0)),r.morphTargetForcedOrder.length)for(var i,a=0,o=r.morphTargetForcedOrder,s=r.morphTargetInfluences;a<e.numSupportedMorphTargets&&a<o.length;)i=n["morphTarget"+a],i>=0&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[o[a]]),p(i),Ht.vertexAttribPointer(i,3,Ht.FLOAT,!1,0,0)),i=n["morphNormal"+a],i>=0&&e.morphNormals&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[o[a]]),p(i),Ht.vertexAttribPointer(i,3,Ht.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[a]=s[o[a]],a++;else{for(var h=[],s=r.morphTargetInfluences,l=0,u=s.length;u>l;l++){var f=s[l];h.push([f,l])}h.length>e.numSupportedMorphTargets?(h.sort(_),h.length=e.numSupportedMorphTargets):h.length>e.numSupportedMorphNormals?h.sort(_):0===h.length&&h.push([0,0]);for(var i,a=0,c=e.numSupportedMorphTargets;c>a;a++)if(h[a]){var d=h[a][1];i=n["morphTarget"+a],i>=0&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[d]),p(i),Ht.vertexAttribPointer(i,3,Ht.FLOAT,!1,0,0)),i=n["morphNormal"+a],i>=0&&e.morphNormals&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[d]),p(i),Ht.vertexAttribPointer(i,3,Ht.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[a]=s[d]}else r.__webglMorphTargetInfluences[a]=0}null!==e.program.uniforms.morphTargetInfluences&&Ht.uniform1fv(e.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}function v(e,t){return e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function T(e,t){return e.z!==t.z?t.z-e.z:e.id-t.id}function _(e,t){return t[0]-e[0]}function x(e){if(e.visible!==!1){if(e instanceof THREE.Scene||e instanceof THREE.Group);else if(M(e),e instanceof THREE.Sprite)Rt.push(e);
else{var t=Tt[e.id];if(t&&(e.frustumCulled===!1||er.intersectsObject(e)===!0))for(var r=0,n=t.length;n>r;r++){var i=t[r];H(i),i.render=!0,Mt.sortObjects===!0&&(rr.setFromMatrixPosition(e.matrixWorld),rr.applyProjection(tr),i.z=rr.z)}}for(var r=0,n=e.children.length;n>r;r++)x(e.children[r])}}function y(e,t,r,n,i,a){for(var o,s=0,h=e.length;h>s;s++){var l=e[s],u=l.object,f=l.buffer;if(W(u,t),a)o=a;else{if(o=l.material,!o)continue;i&&Mt.setBlending(o.blending,o.blendEquation,o.blendSrc,o.blendDst),Mt.setDepthTest(o.depthTest),Mt.setDepthWrite(o.depthWrite),j(o.polygonOffset,o.polygonOffsetFactor,o.polygonOffsetUnits)}Mt.setMaterialFaces(o),f instanceof THREE.BufferGeometry?Mt.renderBufferDirect(t,r,n,o,f,u):Mt.renderBuffer(t,r,n,o,f,u)}}function R(e,t,r,n,i,a,o){for(var s,h=0,l=e.length;l>h;h++){var u=e[h],f=u.object;if(f.visible){if(o)s=o;else{if(s=u[t],!s)continue;a&&Mt.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),Mt.setDepthTest(s.depthTest),Mt.setDepthWrite(s.depthWrite),j(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}Mt.renderImmediateObject(r,n,i,s,f)}}}function b(e){var t=e.object,r=t.material;r.transparent?(e.transparent=r,e.opaque=null):(e.opaque=r,e.transparent=null)}function H(e){var t=e.object,r=(e.buffer,t.geometry,t.material);r&&(e.material=r,r.transparent?yt.push(e):xt.push(e))}function M(e){void 0===e.__webglInit&&(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,e.addEventListener("removed",Rr));var n=e.geometry;if(void 0===n||void 0===n.__webglInit&&(n.__webglInit=!0,n.addEventListener("dispose",br),n instanceof THREE.BufferGeometry?Mt.info.memory.geometries++:e instanceof THREE.Mesh?S(e,n):e instanceof THREE.Line?void 0===n.__webglVertexBuffer&&(r(n),o(n,e),n.verticesNeedUpdate=!0,n.colorsNeedUpdate=!0,n.lineDistancesNeedUpdate=!0):e instanceof THREE.PointCloud&&void 0===n.__webglVertexBuffer&&(t(n),a(n,e),n.verticesNeedUpdate=!0,n.colorsNeedUpdate=!0)),void 0===e.__webglActive)if(e.__webglActive=!0,e instanceof THREE.Mesh){if(n instanceof THREE.BufferGeometry)A(Tt,n,e);else if(n instanceof THREE.Geometry)for(var i=Br[n.id],s=0,h=i.length;h>s;s++)A(Tt,i[s],e)}else(e instanceof THREE.Line||e instanceof THREE.PointCloud)&&A(Tt,n,e)}function w(e,t){for(var r,n,i=or.get("OES_element_index_uint")?4294967296:65535,a={},o=e.morphTargets.length,s=e.morphNormals.length,h={},l=[],u=0,f=e.faces.length;f>u;u++){var c=e.faces[u],d=t?c.materialIndex:0;d in a||(a[d]={hash:d,counter:0}),r=a[d].hash+"_"+a[d].counter,r in h||(n={id:Dr++,faces3:[],materialIndex:d,vertices:0,numMorphTargets:o,numMorphNormals:s},h[r]=n,l.push(n)),h[r].vertices+3>i&&(a[d].counter+=1,r=a[d].hash+"_"+a[d].counter,r in h||(n={id:Dr++,faces3:[],materialIndex:d,vertices:0,numMorphTargets:o,numMorphNormals:s},h[r]=n,l.push(n))),h[r].faces3.push(u),h[r].vertices+=3}return l}function S(e,t){var r=(e.material,!1);(void 0===Br[t.id]||t.groupsNeedUpdate===!0)&&(delete Tt[e.id],Br[t.id]=w(t,!1),t.groupsNeedUpdate=!1);for(var i=Br[t.id],a=0,o=i.length;o>a;a++){var h=i[a];void 0===h.__webglVertexBuffer?(n(h),s(h,e),t.verticesNeedUpdate=!0,t.morphTargetsNeedUpdate=!0,t.elementsNeedUpdate=!0,t.uvsNeedUpdate=!0,t.normalsNeedUpdate=!0,t.tangentsNeedUpdate=!0,t.colorsNeedUpdate=!0,r=!0):r=!1,(r||void 0===e.__webglActive)&&A(Tt,h,e)}e.__webglActive=!0}function A(e,t,r){var n=r.id;e[n]=e[n]||[],e[n].push({id:n,buffer:t,object:r,material:null,z:0})}function C(e){var t=e.geometry;if(t instanceof THREE.BufferGeometry)for(var r=t.attributes,n=t.attributesKeys,i=0,a=n.length;a>i;i++){var o=n[i],l=r[o];if(void 0===l.buffer&&(l.buffer=Ht.createBuffer(),l.needsUpdate=!0),l.needsUpdate===!0){var d="index"===o?Ht.ELEMENT_ARRAY_BUFFER:Ht.ARRAY_BUFFER;Ht.bindBuffer(d,l.buffer),Ht.bufferData(d,l.array,Ht.STATIC_DRAW),l.needsUpdate=!1}}else if(e instanceof THREE.Mesh){t.groupsNeedUpdate===!0&&S(e,t);for(var E=Br[t.id],i=0,p=E.length;p>i;i++){var m=E[i],g=h(e,m);t.groupsNeedUpdate===!0&&s(m,e);var v=g.attributes&&F(g);(t.verticesNeedUpdate||t.morphTargetsNeedUpdate||t.elementsNeedUpdate||t.uvsNeedUpdate||t.normalsNeedUpdate||t.colorsNeedUpdate||t.tangentsNeedUpdate||v)&&c(m,e,Ht.DYNAMIC_DRAW,!t.dynamic,g)}t.verticesNeedUpdate=!1,t.morphTargetsNeedUpdate=!1,t.elementsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.tangentsNeedUpdate=!1,g.attributes&&P(g)}else if(e instanceof THREE.Line){var g=h(e,t),v=g.attributes&&F(g);(t.verticesNeedUpdate||t.colorsNeedUpdate||t.lineDistancesNeedUpdate||v)&&f(t,Ht.DYNAMIC_DRAW),t.verticesNeedUpdate=!1,t.colorsNeedUpdate=!1,t.lineDistancesNeedUpdate=!1,g.attributes&&P(g)}else if(e instanceof THREE.PointCloud){var g=h(e,t),v=g.attributes&&F(g);(t.verticesNeedUpdate||t.colorsNeedUpdate||v)&&u(t,Ht.DYNAMIC_DRAW,e),t.verticesNeedUpdate=!1,t.colorsNeedUpdate=!1,g.attributes&&P(g)}}function F(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function P(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function B(e){e instanceof THREE.Mesh||e instanceof THREE.PointCloud||e instanceof THREE.Line?delete Tt[e.id]:(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&D(_t,e),delete e.__webglInit,delete e._modelViewMatrix,delete e._normalMatrix,delete e.__webglActive}function D(e,t){for(var r=e.length-1;r>=0;r--)e[r].object===t&&e.splice(r,1)}function U(e,t,r,n){e.addEventListener("dispose",wr);var i=Ur[e.type];if(i){var a=THREE.ShaderLib[i];e.__webglShader={uniforms:THREE.UniformsUtils.clone(a.uniforms),vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}}else e.__webglShader={uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};var o=nt(t),s=it(t),h=rt(n),l={precision:ht,supportsVertexTextures:dr,map:!!e.map,envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,combine:e.combine,vertexColors:e.vertexColors,fog:r,useFog:e.fog,fogExp:!1,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:pt,skinning:e.skinning,maxBones:h,useVertexTexture:Er&&n&&n.skeleton&&n.skeleton.useVertexTexture,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:Mt.maxMorphTargets,maxMorphNormals:Mt.maxMorphNormals,maxDirLights:o.directional,maxPointLights:o.point,maxSpotLights:o.spot,maxHemiLights:o.hemi,maxShadows:s,shadowMapEnabled:Mt.shadowMapEnabled&&n.receiveShadow&&s>0,shadowMapType:Mt.shadowMapType,shadowMapDebug:Mt.shadowMapDebug,shadowMapCascade:Mt.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},u=[];if(i?u.push(i):(u.push(e.fragmentShader),u.push(e.vertexShader)),void 0!==e.defines)for(var f in e.defines)u.push(f),u.push(e.defines[f]);for(var f in l)u.push(f),u.push(l[f]);for(var c,d=u.join(),E=0,p=wt.length;p>E;E++){var m=wt[E];if(m.code===d){c=m,c.usedTimes++;break}}void 0===c&&(c=new THREE.WebGLProgram(Mt,d,e,l),wt.push(c),Mt.info.memory.programs=wt.length),e.program=c;var g=c.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0;for(var v,T="morphTarget",_=0;_<Mt.maxMorphTargets;_++)v=T+_,g[v]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;var v,T="morphNormal";for(_=0;_<Mt.maxMorphNormals;_++)v=T+_,g[v]>=0&&e.numSupportedMorphNormals++}e.uniformsList=[];for(var x in e.__webglShader.uniforms){var y=e.program.uniforms[x];y&&e.uniformsList.push([e.__webglShader.uniforms[x],y])}}function L(e,t,r,n,i){Bt=0,n.needsUpdate&&(n.program&&Pr(n),U(n,t,r,i),n.needsUpdate=!1),n.morphTargets&&(i.__webglMorphTargetInfluences||(i.__webglMorphTargetInfluences=new Float32Array(Mt.maxMorphTargets)));var a=!1,o=!1,s=!1,h=n.program,l=h.uniforms,u=n.__webglShader.uniforms;if(h.id!==St&&(Ht.useProgram(h.program),St=h.id,a=!0,o=!0,s=!0),n.id!==Ct&&(-1===Ct&&(s=!0),Ct=n.id,o=!0),(a||e!==Pt)&&(Ht.uniformMatrix4fv(l.projectionMatrix,!1,e.projectionMatrix.elements),pt&&Ht.uniform1f(l.logDepthBufFC,2/(Math.log(e.far+1)/Math.LN2)),e!==Pt&&(Pt=e),(n instanceof THREE.ShaderMaterial||n.envMap)&&null!==l.cameraPosition&&(rr.setFromMatrixPosition(e.matrixWorld),Ht.uniform3f(l.cameraPosition,rr.x,rr.y,rr.z)),(n instanceof THREE.MeshBasicMaterial||n instanceof THREE.ShaderMaterial||n.skinning)&&null!==l.viewMatrix&&Ht.uniformMatrix4fv(l.viewMatrix,!1,e.matrixWorldInverse.elements)),n.skinning)if(i.bindMatrix&&null!==l.bindMatrix&&Ht.uniformMatrix4fv(l.bindMatrix,!1,i.bindMatrix.elements),i.bindMatrixInverse&&null!==l.bindMatrixInverse&&Ht.uniformMatrix4fv(l.bindMatrixInverse,!1,i.bindMatrixInverse.elements),Er&&i.skeleton&&i.skeleton.useVertexTexture){if(null!==l.boneTexture){var f=I();Ht.uniform1i(l.boneTexture,f),Mt.setTexture(i.skeleton.boneTexture,f)}null!==l.boneTextureWidth&&Ht.uniform1i(l.boneTextureWidth,i.skeleton.boneTextureWidth),null!==l.boneTextureHeight&&Ht.uniform1i(l.boneTextureHeight,i.skeleton.boneTextureHeight)}else i.skeleton&&i.skeleton.boneMatrices&&null!==l.boneGlobalMatrices&&Ht.uniformMatrix4fv(l.boneGlobalMatrices,!1,i.skeleton.boneMatrices);return o&&(r&&n.fog&&V(u,r),n instanceof THREE.MeshBasicMaterial&&N(u,n),n instanceof THREE.LineBasicMaterial&&z(u,n),i.receiveShadow&&!n._shadowPass&&k(u,t),G(n.uniformsList)),O(l,i),null!==l.modelMatrix&&Ht.uniformMatrix4fv(l.modelMatrix,!1,i.matrixWorld.elements),h}function N(e,t){e.opacity.value=t.opacity,Mt.gammaInput?e.diffuse.value.copyGammaToLinear(t.color):e.diffuse.value=t.color,e.map.value=t.map,e.lightMap.value=t.lightMap,e.specularMap.value=t.specularMap,e.alphaMap.value=t.alphaMap,t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale));var r;if(t.map?r=t.map:t.specularMap?r=t.specularMap:t.normalMap?r=t.normalMap:t.bumpMap?r=t.bumpMap:t.alphaMap&&(r=t.alphaMap),void 0!==r){var n=r.offset,i=r.repeat;e.offsetRepeat.value.set(n.x,n.y,i.x,i.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,e.reflectivity.value=Mt.gammaInput?t.reflectivity:t.reflectivity,e.refractionRatio.value=t.refractionRatio}function z(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function V(e,t){e.fogColor.value=t.color,t instanceof THREE.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof THREE.FogExp2&&(e.fogDensity.value=t.density)}function k(e,t){if(e.shadowMatrix)for(var r=0,n=0,i=t.length;i>n;n++){var a=t[n];a.castShadow&&(a instanceof THREE.SpotLight||a instanceof THREE.DirectionalLight&&!a.shadowCascade)&&(e.shadowMap.value[r]=a.shadowMap,e.shadowMapSize.value[r]=a.shadowMapSize,e.shadowMatrix.value[r]=a.shadowMatrix,e.shadowDarkness.value[r]=a.shadowDarkness,e.shadowBias.value[r]=a.shadowBias,r++)}}function O(e,t){Ht.uniformMatrix4fv(e.modelViewMatrix,!1,t._modelViewMatrix.elements),e.normalMatrix&&Ht.uniformMatrix3fv(e.normalMatrix,!1,t._normalMatrix.elements)}function I(){var e=Bt;return e>=lr&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+lr),Bt+=1,e}function G(e){for(var t,r,n,i=0,a=e.length;a>i;i++){var o=e[i][0];if(o.needsUpdate!==!1){var s=o.type,h=o.value,l=e[i][1];switch(s){case"1i":Ht.uniform1i(l,h);break;case"1f":Ht.uniform1f(l,h);break;case"2f":Ht.uniform2f(l,h[0],h[1]);break;case"3f":Ht.uniform3f(l,h[0],h[1],h[2]);break;case"4f":Ht.uniform4f(l,h[0],h[1],h[2],h[3]);break;case"1iv":Ht.uniform1iv(l,h);break;case"3iv":Ht.uniform3iv(l,h);break;case"1fv":Ht.uniform1fv(l,h);break;case"2fv":Ht.uniform2fv(l,h);break;case"3fv":Ht.uniform3fv(l,h);break;case"4fv":Ht.uniform4fv(l,h);break;case"Matrix3fv":Ht.uniformMatrix3fv(l,!1,h);break;case"Matrix4fv":Ht.uniformMatrix4fv(l,!1,h);break;case"i":Ht.uniform1i(l,h);break;case"f":Ht.uniform1f(l,h);break;case"v2":Ht.uniform2f(l,h.x,h.y);break;case"v3":Ht.uniform3f(l,h.x,h.y,h.z);break;case"v4":Ht.uniform4f(l,h.x,h.y,h.z,h.w);break;case"c":Ht.uniform3f(l,h.r,h.g,h.b);break;case"iv1":Ht.uniform1iv(l,h);break;case"iv":Ht.uniform3iv(l,h);break;case"fv1":Ht.uniform1fv(l,h);break;case"fv":Ht.uniform3fv(l,h);break;case"v2v":void 0===o._array&&(o._array=new Float32Array(2*h.length));for(var u=0,f=h.length;f>u;u++)n=2*u,o._array[n]=h[u].x,o._array[n+1]=h[u].y;Ht.uniform2fv(l,o._array);break;case"v3v":void 0===o._array&&(o._array=new Float32Array(3*h.length));for(var u=0,f=h.length;f>u;u++)n=3*u,o._array[n]=h[u].x,o._array[n+1]=h[u].y,o._array[n+2]=h[u].z;Ht.uniform3fv(l,o._array);break;case"v4v":void 0===o._array&&(o._array=new Float32Array(4*h.length));for(var u=0,f=h.length;f>u;u++)n=4*u,o._array[n]=h[u].x,o._array[n+1]=h[u].y,o._array[n+2]=h[u].z,o._array[n+3]=h[u].w;Ht.uniform4fv(l,o._array);break;case"m3":Ht.uniformMatrix3fv(l,!1,h.elements);break;case"m3v":void 0===o._array&&(o._array=new Float32Array(9*h.length));for(var u=0,f=h.length;f>u;u++)h[u].flattenToArrayOffset(o._array,9*u);Ht.uniformMatrix3fv(l,!1,o._array);break;case"m4":Ht.uniformMatrix4fv(l,!1,h.elements);break;case"m4v":void 0===o._array&&(o._array=new Float32Array(16*h.length));for(var u=0,f=h.length;f>u;u++)h[u].flattenToArrayOffset(o._array,16*u);Ht.uniformMatrix4fv(l,!1,o._array);break;case"t":if(t=h,r=I(),Ht.uniform1i(l,r),!t)continue;t.image instanceof Array&&6===t.image.length?K(t,r):t instanceof THREE.WebGLRenderTargetCube?Q(t,r):Mt.setTexture(t,r);break;case"tv":void 0===o._array&&(o._array=[]);for(var u=0,f=o.value.length;f>u;u++)o._array[u]=I();Ht.uniform1iv(l,o._array);for(var u=0,f=o.value.length;f>u;u++)t=o.value[u],r=o._array[u],t&&Mt.setTexture(t,r);break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+s)}}}}function W(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getNormalMatrix(e._modelViewMatrix)}function X(e){e*=st,e!==Xt&&(Ht.lineWidth(e),Xt=e)}function j(e,t,r){It!==e&&(e?Ht.enable(Ht.POLYGON_OFFSET_FILL):Ht.disable(Ht.POLYGON_OFFSET_FILL),It=e),!e||Gt===t&&Wt===r||(Ht.polygonOffset(t,r),Gt=t,Wt=r)}function Y(e,t,r){var n;r?(Ht.texParameteri(e,Ht.TEXTURE_WRAP_S,tt(t.wrapS)),Ht.texParameteri(e,Ht.TEXTURE_WRAP_T,tt(t.wrapT)),Ht.texParameteri(e,Ht.TEXTURE_MAG_FILTER,tt(t.magFilter)),Ht.texParameteri(e,Ht.TEXTURE_MIN_FILTER,tt(t.minFilter))):(Ht.texParameteri(e,Ht.TEXTURE_WRAP_S,Ht.CLAMP_TO_EDGE),Ht.texParameteri(e,Ht.TEXTURE_WRAP_T,Ht.CLAMP_TO_EDGE),(t.wrapS!==THREE.ClampToEdgeWrapping||t.wrapT!==THREE.ClampToEdgeWrapping)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT is set to THREE.ClampToEdgeWrapping. ( "+t.sourceFile+" )"),Ht.texParameteri(e,Ht.TEXTURE_MAG_FILTER,et(t.magFilter)),Ht.texParameteri(e,Ht.TEXTURE_MIN_FILTER,et(t.minFilter)),t.minFilter!==THREE.NearestFilter&&t.minFilter!==THREE.LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter is set to THREE.LinearFilter or THREE.NearestFilter. ( "+t.sourceFile+" )")),n=or.get("EXT_texture_filter_anisotropic"),n&&t.type!==THREE.FloatType&&(t.anisotropy>1||t.__oldAnisotropy)&&(Ht.texParameterf(e,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Mt.getMaxAnisotropy())),t.__oldAnisotropy=t.anisotropy)}function q(e,t){if(e.width>t||e.height>t){var r=t/Math.max(e.width,e.height),n=document.createElement("canvas");n.width=Math.floor(e.width*r),n.height=Math.floor(e.height*r);var i=n.getContext("2d");return i.drawImage(e,0,0,e.width,e.height,0,0,n.width,n.height),console.log("THREE.WebGLRenderer:",e,"is too big ("+e.width+"x"+e.height+"). Resized to "+n.width+"x"+n.height+"."),n}return e}function K(e,t){if(6===e.image.length)if(e.needsUpdate){e.image.__webglTextureCube||(e.addEventListener("dispose",Hr),e.image.__webglTextureCube=Ht.createTexture(),Mt.info.memory.textures++),Ht.activeTexture(Ht.TEXTURE0+t),Ht.bindTexture(Ht.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),Ht.pixelStorei(Ht.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var r=e instanceof THREE.CompressedTexture,n=e.image[0]instanceof THREE.DataTexture,i=[],a=0;6>a;a++)i[a]=!Mt.autoScaleCubemaps||r||n?n?e.image[a].image:e.image[a]:q(e.image[a],cr);var o=i[0],s=THREE.Math.isPowerOfTwo(o.width)&&THREE.Math.isPowerOfTwo(o.height),h=tt(e.format),l=tt(e.type);Y(Ht.TEXTURE_CUBE_MAP,e,s);for(var a=0;6>a;a++)if(r)for(var u,f=i[a].mipmaps,c=0,d=f.length;d>c;c++)u=f[c],e.format!==THREE.RGBAFormat&&e.format!==THREE.RGBFormat?Tr().indexOf(h)>-1?Ht.compressedTexImage2D(Ht.TEXTURE_CUBE_MAP_POSITIVE_X+a,c,h,u.width,u.height,0,u.data):console.warn("Attempt to load unsupported compressed texture format"):Ht.texImage2D(Ht.TEXTURE_CUBE_MAP_POSITIVE_X+a,c,h,u.width,u.height,0,h,l,u.data);else n?Ht.texImage2D(Ht.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,h,i[a].width,i[a].height,0,h,l,i[a].data):Ht.texImage2D(Ht.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,h,h,l,i[a]);e.generateMipmaps&&s&&Ht.generateMipmap(Ht.TEXTURE_CUBE_MAP),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else Ht.activeTexture(Ht.TEXTURE0+t),Ht.bindTexture(Ht.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}function Q(e,t){Ht.activeTexture(Ht.TEXTURE0+t),Ht.bindTexture(Ht.TEXTURE_CUBE_MAP,e.__webglTexture)}function Z(e,t,r){Ht.bindFramebuffer(Ht.FRAMEBUFFER,e),Ht.framebufferTexture2D(Ht.FRAMEBUFFER,Ht.COLOR_ATTACHMENT0,r,t.__webglTexture,0)}function J(e,t){Ht.bindRenderbuffer(Ht.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(Ht.renderbufferStorage(Ht.RENDERBUFFER,Ht.DEPTH_COMPONENT16,t.width,t.height),Ht.framebufferRenderbuffer(Ht.FRAMEBUFFER,Ht.DEPTH_ATTACHMENT,Ht.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(Ht.renderbufferStorage(Ht.RENDERBUFFER,Ht.DEPTH_STENCIL,t.width,t.height),Ht.framebufferRenderbuffer(Ht.FRAMEBUFFER,Ht.DEPTH_STENCIL_ATTACHMENT,Ht.RENDERBUFFER,e)):Ht.renderbufferStorage(Ht.RENDERBUFFER,Ht.RGBA4,t.width,t.height)}function $(e){e instanceof THREE.WebGLRenderTargetCube?(Ht.bindTexture(Ht.TEXTURE_CUBE_MAP,e.__webglTexture),Ht.generateMipmap(Ht.TEXTURE_CUBE_MAP),Ht.bindTexture(Ht.TEXTURE_CUBE_MAP,null)):(Ht.bindTexture(Ht.TEXTURE_2D,e.__webglTexture),Ht.generateMipmap(Ht.TEXTURE_2D),Ht.bindTexture(Ht.TEXTURE_2D,null))}function et(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?Ht.NEAREST:Ht.LINEAR}function tt(e){var t;if(e===THREE.RepeatWrapping)return Ht.REPEAT;if(e===THREE.ClampToEdgeWrapping)return Ht.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return Ht.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return Ht.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return Ht.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return Ht.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return Ht.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return Ht.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return Ht.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return Ht.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return Ht.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return Ht.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return Ht.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return Ht.BYTE;if(e===THREE.ShortType)return Ht.SHORT;if(e===THREE.UnsignedShortType)return Ht.UNSIGNED_SHORT;if(e===THREE.IntType)return Ht.INT;if(e===THREE.UnsignedIntType)return Ht.UNSIGNED_INT;if(e===THREE.FloatType)return Ht.FLOAT;if(e===THREE.AlphaFormat)return Ht.ALPHA;if(e===THREE.RGBFormat)return Ht.RGB;if(e===THREE.RGBAFormat)return Ht.RGBA;if(e===THREE.LuminanceFormat)return Ht.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return Ht.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return Ht.FUNC_ADD;if(e===THREE.SubtractEquation)return Ht.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return Ht.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return Ht.ZERO;if(e===THREE.OneFactor)return Ht.ONE;if(e===THREE.SrcColorFactor)return Ht.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return Ht.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return Ht.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return Ht.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return Ht.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return Ht.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return Ht.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return Ht.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return Ht.SRC_ALPHA_SATURATE;if(t=or.get("WEBGL_compressed_texture_s3tc"),null!==t){if(e===THREE.RGB_S3TC_DXT1_Format)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t=or.get("WEBGL_compressed_texture_pvrtc"),null!==t){if(e===THREE.RGB_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===THREE.RGB_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===THREE.RGBA_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===THREE.RGBA_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t=or.get("EXT_blend_minmax"),null!==t){if(e===THREE.MinEquation)return t.MIN_EXT;if(e===THREE.MaxEquation)return t.MAX_EXT}return 0}function rt(e){return Er&&e&&e.skeleton&&e.skeleton.useVertexTexture,1024}function nt(e){for(var t=0,r=0,n=0,i=0,a=0,o=e.length;o>a;a++){var s=e[a];!s.onlyShadow&&s.visible!==!1}return{directional:t,point:r,spot:n,hemi:i}}function it(e){for(var t=0,r=0,n=e.length;n>r;r++){var i=e[r];i.castShadow&&(i instanceof THREE.SpotLight&&t++,i instanceof THREE.DirectionalLight&&!i.shadowCascade&&t++)}return t}console.log("THREE.WebGLRenderer",THREE.REVISION),e=e||{};var at=void 0!==e.canvas?e.canvas:document.createElement("canvas"),ot=void 0!==e.context?e.context:null,st=1,ht=void 0!==e.precision?e.precision:"highp",lt=void 0!==e.alpha?e.alpha:!1,ut=void 0!==e.depth?e.depth:!0,ft=void 0!==e.stencil?e.stencil:!0,ct=void 0!==e.antialias?e.antialias:!1,dt=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,Et=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,pt=void 0!==e.logarithmicDepthBuffer?e.logarithmicDepthBuffer:!1,mt=new THREE.Color(0),gt=0,vt=[],Tt={},_t=[],xt=[],yt=[],Rt=[],bt=[];this.domElement=at,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.shadowMapEnabled=!1,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Ht,Mt=this,wt=[],St=null,At=null,Ct=-1,Ft="",Pt=null,Bt=0,Dt=-1,Ut=-1,Lt=-1,Nt=-1,zt=-1,Vt=-1,kt=-1,Ot=-1,It=null,Gt=null,Wt=null,Xt=null,jt=0,Yt=0,qt=at.width,Kt=at.height,Qt=0,Zt=0,Jt=new Uint8Array(16),$t=new Uint8Array(16),er=new THREE.Frustum,tr=new THREE.Matrix4,rr=(new THREE.Matrix4,new THREE.Vector3),nr=(new THREE.Vector3,!0);try{var ir={alpha:lt,depth:ut,stencil:ft,antialias:ct,premultipliedAlpha:dt,preserveDrawingBuffer:Et};if(Ht=ot||at.getContext("webgl",ir)||at.getContext("experimental-webgl",ir),null===Ht)throw null!==at.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";at.addEventListener("webglcontextlost",function(e){e.preventDefault(),hr(),sr(),Tt={}},!1)}catch(ar){console.error(ar)}void 0===Ht.getShaderPrecisionFormat&&(Ht.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var or=new THREE.WebGLExtensions(Ht);or.get("OES_texture_float"),or.get("OES_texture_float_linear"),or.get("OES_standard_derivatives"),pt&&or.get("EXT_frag_depth");var sr=function(){Ht.clearColor(0,0,0,1),Ht.clearDepth(1),Ht.clearStencil(0),Ht.enable(Ht.DEPTH_TEST),Ht.depthFunc(Ht.LEQUAL),Ht.frontFace(Ht.CCW),Ht.cullFace(Ht.BACK),Ht.enable(Ht.CULL_FACE),Ht.enable(Ht.BLEND),Ht.blendEquation(Ht.FUNC_ADD),Ht.blendFunc(Ht.SRC_ALPHA,Ht.ONE_MINUS_SRC_ALPHA),Ht.viewport(jt,Yt,qt,Kt),Ht.clearColor(mt.r,mt.g,mt.b,gt)},hr=function(){St=null,Pt=null,Lt=-1,kt=-1,Ot=-1,Dt=-1,Ut=-1,Ft="",Ct=-1,nr=!0;for(var e=0;e<$t.length;e++)$t[e]=0};sr(),this.context=Ht;var lr=Ht.getParameter(Ht.MAX_TEXTURE_IMAGE_UNITS),ur=Ht.getParameter(Ht.MAX_VERTEX_TEXTURE_IMAGE_UNITS),fr=Ht.getParameter(Ht.MAX_TEXTURE_SIZE),cr=Ht.getParameter(Ht.MAX_CUBE_MAP_TEXTURE_SIZE),dr=ur>0,Er=dr&&or.get("OES_texture_float"),pr=Ht.getShaderPrecisionFormat(Ht.VERTEX_SHADER,Ht.HIGH_FLOAT),mr=Ht.getShaderPrecisionFormat(Ht.VERTEX_SHADER,Ht.MEDIUM_FLOAT),gr=(Ht.getShaderPrecisionFormat(Ht.VERTEX_SHADER,Ht.LOW_FLOAT),Ht.getShaderPrecisionFormat(Ht.FRAGMENT_SHADER,Ht.HIGH_FLOAT)),vr=Ht.getShaderPrecisionFormat(Ht.FRAGMENT_SHADER,Ht.MEDIUM_FLOAT),Tr=(Ht.getShaderPrecisionFormat(Ht.FRAGMENT_SHADER,Ht.LOW_FLOAT),function(){var e;return function(){if(void 0!==e)return e;if(e=[],or.get("WEBGL_compressed_texture_pvrtc")||or.get("WEBGL_compressed_texture_s3tc"))for(var t=Ht.getParameter(Ht.COMPRESSED_TEXTURE_FORMATS),r=0;r<t.length;r++)e.push(t[r]);return e}}()),_r=pr.precision>0&&gr.precision>0,xr=mr.precision>0&&vr.precision>0;"highp"!==ht||_r||(xr?(ht="mediump",console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(ht="lowp",console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp."))),"mediump"!==ht||xr||(ht="lowp",console.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));var yr=new THREE.SpritePlugin(this,Rt);this.getContext=function(){return Ht},this.forceContextLoss=function(){or.get("WEBGL_lose_context").loseContext()},this.supportsVertexTextures=function(){return dr},this.supportsFloatTextures=function(){return or.get("OES_texture_float")},this.supportsStandardDerivatives=function(){return or.get("OES_standard_derivatives")},this.supportsCompressedTextureS3TC=function(){return or.get("WEBGL_compressed_texture_s3tc")},this.supportsCompressedTexturePVRTC=function(){return or.get("WEBGL_compressed_texture_pvrtc")},this.supportsBlendMinMax=function(){return or.get("EXT_blend_minmax")},this.getMaxAnisotropy=function(){var e;return function(){if(void 0!==e)return e;var t=or.get("EXT_texture_filter_anisotropic");return e=null!==t?Ht.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}(),this.getPrecision=function(){return ht},this.getPixelRatio=function(){return st},this.setPixelRatio=function(e){st=e},this.setSize=function(e,t,r){at.width=e*st,at.height=t*st,r!==!1&&(at.style.width=e+"px",at.style.height=t+"px"),this.setViewport(0,0,e,t)},this.setViewport=function(e,t,r,n){jt=e*st,Yt=t*st,qt=r*st,Kt=n*st,Ht.viewport(jt,Yt,qt,Kt)},this.setScissor=function(e,t,r,n){Ht.scissor(e*st,t*st,r*st,n*st)},this.enableScissorTest=function(e){e?Ht.enable(Ht.SCISSOR_TEST):Ht.disable(Ht.SCISSOR_TEST)},this.getClearColor=function(){return mt},this.setClearColor=function(e,t){mt.set(e),gt=void 0!==t?t:1,Ht.clearColor(mt.r,mt.g,mt.b,gt)},this.getClearAlpha=function(){return gt},this.setClearAlpha=function(e){gt=e,Ht.clearColor(mt.r,mt.g,mt.b,gt)},this.clear=function(e,t,r){var n=0;(void 0===e||e)&&(n|=Ht.COLOR_BUFFER_BIT),(void 0===t||t)&&(n|=Ht.DEPTH_BUFFER_BIT),(void 0===r||r)&&(n|=Ht.STENCIL_BUFFER_BIT),Ht.clear(n)},this.clearColor=function(){Ht.clear(Ht.COLOR_BUFFER_BIT)},this.clearDepth=function(){Ht.clear(Ht.DEPTH_BUFFER_BIT)},this.clearStencil=function(){Ht.clear(Ht.STENCIL_BUFFER_BIT)},this.clearTarget=function(e,t,r,n){this.setRenderTarget(e),this.clear(t,r,n)},this.resetGLState=hr;var Rr=function(e){var t=e.target;t.traverse(function(e){e.removeEventListener("remove",Rr),B(e)})},br=function(e){var t=e.target;t.removeEventListener("dispose",br),Ar(t)},Hr=function(e){var t=e.target;t.removeEventListener("dispose",Hr),Cr(t),Mt.info.memory.textures--},Mr=function(e){var t=e.target;t.removeEventListener("dispose",Mr),Fr(t),Mt.info.memory.textures--},wr=function(e){var t=e.target;t.removeEventListener("dispose",wr),Pr(t)},Sr=function(e){for(var t=["__webglVertexBuffer","__webglNormalBuffer","__webglTangentBuffer","__webglColorBuffer","__webglUVBuffer","__webglUV2Buffer","__webglSkinIndicesBuffer","__webglSkinWeightsBuffer","__webglFaceBuffer","__webglLineBuffer","__webglLineDistanceBuffer"],r=0,n=t.length;n>r;r++){var i=t[r];void 0!==e[i]&&(Ht.deleteBuffer(e[i]),delete e[i])}if(void 0!==e.__webglCustomAttributesList){for(var i in e.__webglCustomAttributesList)Ht.deleteBuffer(e.__webglCustomAttributesList[i].buffer);delete e.__webglCustomAttributesList}Mt.info.memory.geometries--},Ar=function(e){if(delete e.__webglInit,e instanceof THREE.BufferGeometry){for(var t in e.attributes){var r=e.attributes[t];void 0!==r.buffer&&(Ht.deleteBuffer(r.buffer),delete r.buffer)}Mt.info.memory.geometries--}else{var n=Br[e.id];if(void 0!==n){for(var i=0,a=n.length;a>i;i++){var o=n[i];if(void 0!==o.numMorphTargets){for(var s=0,h=o.numMorphTargets;h>s;s++)Ht.deleteBuffer(o.__webglMorphTargetsBuffers[s]);delete o.__webglMorphTargetsBuffers}if(void 0!==o.numMorphNormals){for(var s=0,h=o.numMorphNormals;h>s;s++)Ht.deleteBuffer(o.__webglMorphNormalsBuffers[s]);delete o.__webglMorphNormalsBuffers}Sr(o)}delete Br[e.id]}else Sr(e)}Ft=""},Cr=function(e){if(e.image&&e.image.__webglTextureCube)Ht.deleteTexture(e.image.__webglTextureCube),delete e.image.__webglTextureCube;else{if(void 0===e.__webglInit)return;Ht.deleteTexture(e.__webglTexture),delete e.__webglTexture,delete e.__webglInit}},Fr=function(e){if(e&&void 0!==e.__webglTexture){if(Ht.deleteTexture(e.__webglTexture),delete e.__webglTexture,e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)Ht.deleteFramebuffer(e.__webglFramebuffer[t]),Ht.deleteRenderbuffer(e.__webglRenderbuffer[t]);else Ht.deleteFramebuffer(e.__webglFramebuffer),Ht.deleteRenderbuffer(e.__webglRenderbuffer);delete e.__webglFramebuffer,delete e.__webglRenderbuffer}},Pr=function(e){var t=e.program.program;if(void 0!==t){e.program=void 0;var r,n,i,a=!1;for(r=0,n=wt.length;n>r;r++)if(i=wt[r],i.program===t){i.usedTimes--,0===i.usedTimes&&(a=!0);break}if(a===!0){var o=[];for(r=0,n=wt.length;n>r;r++)i=wt[r],i.program!==t&&o.push(i);wt=o,Ht.deleteProgram(t),Mt.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,r){if(E(),e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=Ht.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=Ht.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=Ht.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=Ht.createBuffer()),e.hasPositions&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglVertexBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,e.positionArray,Ht.DYNAMIC_DRAW),p(t.attributes.position),Ht.vertexAttribPointer(t.attributes.position,3,Ht.FLOAT,!1,0,0)),e.hasNormals){if(Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglNormalBuffer),r.shading===THREE.FlatShading){var n,i,a,o,s,h,l,u,f,c,d,g,v,T,_=3*e.count;for(T=0;_>T;T+=9)v=e.normalArray,o=v[T],l=v[T+1],c=v[T+2],s=v[T+3],u=v[T+4],d=v[T+5],h=v[T+6],f=v[T+7],g=v[T+8],n=(o+s+h)/3,i=(l+u+f)/3,a=(c+d+g)/3,v[T]=n,v[T+1]=i,v[T+2]=a,v[T+3]=n,v[T+4]=i,v[T+5]=a,v[T+6]=n,v[T+7]=i,v[T+8]=a}Ht.bufferData(Ht.ARRAY_BUFFER,e.normalArray,Ht.DYNAMIC_DRAW),p(t.attributes.normal),Ht.vertexAttribPointer(t.attributes.normal,3,Ht.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglUvBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,e.uvArray,Ht.DYNAMIC_DRAW),p(t.attributes.uv),Ht.vertexAttribPointer(t.attributes.uv,2,Ht.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==THREE.NoColors&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,e.__webglColorBuffer),Ht.bufferData(Ht.ARRAY_BUFFER,e.colorArray,Ht.DYNAMIC_DRAW),p(t.attributes.color),Ht.vertexAttribPointer(t.attributes.color,3,Ht.FLOAT,!1,0,0)),m(),Ht.drawArrays(Ht.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,n,i,a){if(n.visible!==!1){C(a);var o=L(e,t,r,n,a),s=!1,h=n.wireframe?1:0,l="direct_"+i.id+"_"+o.id+"_"+h;if(l!==Ft&&(Ft=l,s=!0),s&&E(),a instanceof THREE.Mesh){var u=n.wireframe===!0?Ht.LINES:Ht.TRIANGLES,f=i.attributes.index;if(f){var c,p;f.array instanceof Uint32Array&&or.get("OES_element_index_uint")?(c=Ht.UNSIGNED_INT,p=4):(c=Ht.UNSIGNED_SHORT,p=2);
var m=i.offsets;if(0===m.length)s&&(d(n,o,i,0),Ht.bindBuffer(Ht.ELEMENT_ARRAY_BUFFER,f.buffer)),Ht.drawElements(u,f.array.length,c,0),Mt.info.render.calls++,Mt.info.render.vertices+=f.array.length,Mt.info.render.faces+=f.array.length/3;else{s=!0;for(var g=0,v=m.length;v>g;g++){var T=m[g].index;s&&(d(n,o,i,T),Ht.bindBuffer(Ht.ELEMENT_ARRAY_BUFFER,f.buffer)),Ht.drawElements(u,m[g].count,c,m[g].start*p),Mt.info.render.calls++,Mt.info.render.vertices+=m[g].count,Mt.info.render.faces+=m[g].count/3}}}else{s&&d(n,o,i,0);var _=i.attributes.position;Ht.drawArrays(u,0,_.array.length/3),Mt.info.render.calls++,Mt.info.render.vertices+=_.array.length/3,Mt.info.render.faces+=_.array.length/9}}else if(a instanceof THREE.PointCloud){var u=Ht.POINTS,f=i.attributes.index;if(f){var c,p;f.array instanceof Uint32Array&&or.get("OES_element_index_uint")?(c=Ht.UNSIGNED_INT,p=4):(c=Ht.UNSIGNED_SHORT,p=2);var m=i.offsets;if(0===m.length)s&&(d(n,o,i,0),Ht.bindBuffer(Ht.ELEMENT_ARRAY_BUFFER,f.buffer)),Ht.drawElements(u,f.array.length,c,0),Mt.info.render.calls++,Mt.info.render.points+=f.array.length;else{m.length>1&&(s=!0);for(var g=0,v=m.length;v>g;g++){var T=m[g].index;s&&(d(n,o,i,T),Ht.bindBuffer(Ht.ELEMENT_ARRAY_BUFFER,f.buffer)),Ht.drawElements(u,m[g].count,c,m[g].start*p),Mt.info.render.calls++,Mt.info.render.points+=m[g].count}}}else{s&&d(n,o,i,0);var _=i.attributes.position,m=i.offsets;if(0===m.length)Ht.drawArrays(u,0,_.array.length/3),Mt.info.render.calls++,Mt.info.render.points+=_.array.length/3;else for(var g=0,v=m.length;v>g;g++)Ht.drawArrays(u,m[g].index,m[g].count),Mt.info.render.calls++,Mt.info.render.points+=m[g].count}}else if(a instanceof THREE.Line){var u=a.mode===THREE.LineStrip?Ht.LINE_STRIP:Ht.LINES;X(n.linewidth);var f=i.attributes.index;if(f){var c,p;f.array instanceof Uint32Array?(c=Ht.UNSIGNED_INT,p=4):(c=Ht.UNSIGNED_SHORT,p=2);var m=i.offsets;if(0===m.length)s&&(d(n,o,i,0),Ht.bindBuffer(Ht.ELEMENT_ARRAY_BUFFER,f.buffer)),Ht.drawElements(u,f.array.length,c,0),Mt.info.render.calls++,Mt.info.render.vertices+=f.array.length;else{m.length>1&&(s=!0);for(var g=0,v=m.length;v>g;g++){var T=m[g].index;s&&(d(n,o,i,T),Ht.bindBuffer(Ht.ELEMENT_ARRAY_BUFFER,f.buffer)),Ht.drawElements(u,m[g].count,c,m[g].start*p),Mt.info.render.calls++,Mt.info.render.vertices+=m[g].count}}}else{s&&d(n,o,i,0);var _=i.attributes.position,m=i.offsets;if(0===m.length)Ht.drawArrays(u,0,_.array.length/3),Mt.info.render.calls++,Mt.info.render.vertices+=_.array.length/3;else for(var g=0,v=m.length;v>g;g++)Ht.drawArrays(u,m[g].index,m[g].count),Mt.info.render.calls++,Mt.info.render.vertices+=m[g].count}}}},this.renderBuffer=function(e,t,r,n,i,a){if(n.visible!==!1){C(a);var o=L(e,t,r,n,a),s=o.attributes,h=!1,l=n.wireframe?1:0,u=i.id+"_"+o.id+"_"+l;if(u!==Ft&&(Ft=u,h=!0),h&&E(),!n.morphTargets&&s.position>=0?h&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,i.__webglVertexBuffer),p(s.position),Ht.vertexAttribPointer(s.position,3,Ht.FLOAT,!1,0,0)):a.morphTargetBase&&g(n,i,a),h){if(i.__webglCustomAttributesList)for(var f=0,c=i.__webglCustomAttributesList.length;c>f;f++){var d=i.__webglCustomAttributesList[f];s[d.buffer.belongsToAttribute]>=0&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,d.buffer),p(s[d.buffer.belongsToAttribute]),Ht.vertexAttribPointer(s[d.buffer.belongsToAttribute],d.size,Ht.FLOAT,!1,0,0))}s.color>=0&&(a.geometry.colors.length>0||a.geometry.faces.length>0?(Ht.bindBuffer(Ht.ARRAY_BUFFER,i.__webglColorBuffer),p(s.color),Ht.vertexAttribPointer(s.color,3,Ht.FLOAT,!1,0,0)):void 0!==n.defaultAttributeValues&&Ht.vertexAttrib3fv(s.color,n.defaultAttributeValues.color)),s.normal>=0&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,i.__webglNormalBuffer),p(s.normal),Ht.vertexAttribPointer(s.normal,3,Ht.FLOAT,!1,0,0)),s.tangent>=0&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,i.__webglTangentBuffer),p(s.tangent),Ht.vertexAttribPointer(s.tangent,4,Ht.FLOAT,!1,0,0)),s.uv>=0&&(a.geometry.faceVertexUvs[0]?(Ht.bindBuffer(Ht.ARRAY_BUFFER,i.__webglUVBuffer),p(s.uv),Ht.vertexAttribPointer(s.uv,2,Ht.FLOAT,!1,0,0)):void 0!==n.defaultAttributeValues&&Ht.vertexAttrib2fv(s.uv,n.defaultAttributeValues.uv)),s.uv2>=0&&(a.geometry.faceVertexUvs[1]?(Ht.bindBuffer(Ht.ARRAY_BUFFER,i.__webglUV2Buffer),p(s.uv2),Ht.vertexAttribPointer(s.uv2,2,Ht.FLOAT,!1,0,0)):void 0!==n.defaultAttributeValues&&Ht.vertexAttrib2fv(s.uv2,n.defaultAttributeValues.uv2)),n.skinning&&s.skinIndex>=0&&s.skinWeight>=0&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,i.__webglSkinIndicesBuffer),p(s.skinIndex),Ht.vertexAttribPointer(s.skinIndex,4,Ht.FLOAT,!1,0,0),Ht.bindBuffer(Ht.ARRAY_BUFFER,i.__webglSkinWeightsBuffer),p(s.skinWeight),Ht.vertexAttribPointer(s.skinWeight,4,Ht.FLOAT,!1,0,0)),s.lineDistance>=0&&(Ht.bindBuffer(Ht.ARRAY_BUFFER,i.__webglLineDistanceBuffer),p(s.lineDistance),Ht.vertexAttribPointer(s.lineDistance,1,Ht.FLOAT,!1,0,0))}if(m(),a instanceof THREE.Mesh){var v=i.__typeArray===Uint32Array?Ht.UNSIGNED_INT:Ht.UNSIGNED_SHORT;n.wireframe?(X(n.wireframeLinewidth),h&&Ht.bindBuffer(Ht.ELEMENT_ARRAY_BUFFER,i.__webglLineBuffer),Ht.drawElements(Ht.LINES,i.__webglLineCount,v,0)):(h&&Ht.bindBuffer(Ht.ELEMENT_ARRAY_BUFFER,i.__webglFaceBuffer),Ht.drawElements(Ht.TRIANGLES,i.__webglFaceCount,v,0)),Mt.info.render.calls++,Mt.info.render.vertices+=i.__webglFaceCount,Mt.info.render.faces+=i.__webglFaceCount/3}else if(a instanceof THREE.Line){var T=a.mode===THREE.LineStrip?Ht.LINE_STRIP:Ht.LINES;X(n.linewidth),Ht.drawArrays(T,0,i.__webglLineCount),Mt.info.render.calls++}else a instanceof THREE.PointCloud&&(Ht.drawArrays(Ht.POINTS,0,i.__webglParticleCount),Mt.info.render.calls++,Mt.info.render.points+=i.__webglParticleCount)}},this.render=function(e,t,r,n){if(t instanceof THREE.Camera==!1)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");var i=e.fog;Ft="",Ct=-1,Pt=null,nr=!0,e.autoUpdate===!0&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),tr.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),er.setFromMatrix(tr),vt.length=0,xt.length=0,yt.length=0,Rt.length=0,bt.length=0,x(e),Mt.sortObjects===!0&&(xt.sort(v),yt.sort(T)),Mt.info.render.calls=0,Mt.info.render.vertices=0,Mt.info.render.faces=0,Mt.info.render.points=0,this.setRenderTarget(r),(this.autoClear||n)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);for(var a=0,o=_t.length;o>a;a++){var s=_t[a],h=s.object;h.visible&&(W(h,t),b(s))}if(e.overrideMaterial){var l=e.overrideMaterial;this.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),this.setDepthTest(l.depthTest),this.setDepthWrite(l.depthWrite),j(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits),y(xt,t,vt,i,!0,l),y(yt,t,vt,i,!0,l),R(_t,"",t,vt,i,!1,l)}else{var l=null;this.setBlending(THREE.NoBlending),y(xt,t,vt,i,!1,l),R(_t,"opaque",t,vt,i,!1,l),y(yt,t,vt,i,!0,l),R(_t,"transparent",t,vt,i,!0,l)}yr.render(e,t),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&$(r),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(e,t,r,n,i){var a=L(e,t,r,n,i);Ft="",Mt.setMaterialFaces(n),i.immediateRenderCallback?i.immediateRenderCallback(a,Ht,er):i.render(function(e){Mt.renderBufferImmediate(e,a,n)})};var Br={},Dr=0,Ur={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointCloudMaterial:"particle_basic"};this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?Ht.disable(Ht.CULL_FACE):(Ht.frontFace(t===THREE.FrontFaceDirectionCW?Ht.CW:Ht.CCW),Ht.cullFace(e===THREE.CullFaceBack?Ht.BACK:e===THREE.CullFaceFront?Ht.FRONT:Ht.FRONT_AND_BACK),Ht.enable(Ht.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,r=e.side===THREE.BackSide;Dt!==t&&(t?Ht.disable(Ht.CULL_FACE):Ht.enable(Ht.CULL_FACE),Dt=t),Ut!==r&&(Ht.frontFace(r?Ht.CW:Ht.CCW),Ut=r)},this.setDepthTest=function(e){kt!==e&&(e?Ht.enable(Ht.DEPTH_TEST):Ht.disable(Ht.DEPTH_TEST),kt=e)},this.setDepthWrite=function(e){Ot!==e&&(Ht.depthMask(e),Ot=e)},this.setBlending=function(e,t,r,n){e!==Lt&&(e===THREE.NoBlending?Ht.disable(Ht.BLEND):e===THREE.AdditiveBlending?(Ht.enable(Ht.BLEND),Ht.blendEquation(Ht.FUNC_ADD),Ht.blendFunc(Ht.SRC_ALPHA,Ht.ONE)):e===THREE.SubtractiveBlending?(Ht.enable(Ht.BLEND),Ht.blendEquation(Ht.FUNC_ADD),Ht.blendFunc(Ht.ZERO,Ht.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(Ht.enable(Ht.BLEND),Ht.blendEquation(Ht.FUNC_ADD),Ht.blendFunc(Ht.ZERO,Ht.SRC_COLOR)):e===THREE.CustomBlending?Ht.enable(Ht.BLEND):(Ht.enable(Ht.BLEND),Ht.blendEquationSeparate(Ht.FUNC_ADD,Ht.FUNC_ADD),Ht.blendFuncSeparate(Ht.SRC_ALPHA,Ht.ONE_MINUS_SRC_ALPHA,Ht.ONE,Ht.ONE_MINUS_SRC_ALPHA)),Lt=e),e===THREE.CustomBlending?(t!==Nt&&(Ht.blendEquation(tt(t)),Nt=t),(r!==zt||n!==Vt)&&(Ht.blendFunc(tt(r),tt(n)),zt=r,Vt=n)):(Nt=null,zt=null,Vt=null)},this.uploadTexture=function(e){void 0===e.__webglInit&&(e.__webglInit=!0,e.addEventListener("dispose",Hr),e.__webglTexture=Ht.createTexture(),Mt.info.memory.textures++),Ht.bindTexture(Ht.TEXTURE_2D,e.__webglTexture),Ht.pixelStorei(Ht.UNPACK_FLIP_Y_WEBGL,e.flipY),Ht.pixelStorei(Ht.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),Ht.pixelStorei(Ht.UNPACK_ALIGNMENT,e.unpackAlignment),e.image=q(e.image,fr);var t=e.image,r=THREE.Math.isPowerOfTwo(t.width)&&THREE.Math.isPowerOfTwo(t.height),n=tt(e.format),i=tt(e.type);Y(Ht.TEXTURE_2D,e,r);var a,o=e.mipmaps;if(o.length>0&&r){for(var s=0,h=o.length;h>s;s++)a=o[s],Ht.texImage2D(Ht.TEXTURE_2D,s,n,n,i,a);e.generateMipmaps=!1}else Ht.texImage2D(Ht.TEXTURE_2D,0,n,n,i,e.image);e.generateMipmaps&&r&&Ht.generateMipmap(Ht.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()},this.setTexture=function(e,t){Ht.activeTexture(Ht.TEXTURE0+t),e.needsUpdate?Mt.uploadTexture(e):Ht.bindTexture(Ht.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&void 0===e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",Mr),e.__webglTexture=Ht.createTexture(),Mt.info.memory.textures++;var r=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height),n=tt(e.format),i=tt(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],Ht.bindTexture(Ht.TEXTURE_CUBE_MAP,e.__webglTexture),Y(Ht.TEXTURE_CUBE_MAP,e,r);for(var a=0;6>a;a++)e.__webglFramebuffer[a]=Ht.createFramebuffer(),e.__webglRenderbuffer[a]=Ht.createRenderbuffer(),Ht.texImage2D(Ht.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,n,e.width,e.height,0,n,i,null),Z(e.__webglFramebuffer[a],e,Ht.TEXTURE_CUBE_MAP_POSITIVE_X+a),J(e.__webglRenderbuffer[a],e);r&&Ht.generateMipmap(Ht.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=Ht.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:Ht.createRenderbuffer(),Ht.bindTexture(Ht.TEXTURE_2D,e.__webglTexture),Y(Ht.TEXTURE_2D,e,r),Ht.texImage2D(Ht.TEXTURE_2D,0,n,e.width,e.height,0,n,i,null),Z(e.__webglFramebuffer,e,Ht.TEXTURE_2D),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?Ht.framebufferRenderbuffer(Ht.FRAMEBUFFER,Ht.DEPTH_ATTACHMENT,Ht.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&Ht.framebufferRenderbuffer(Ht.FRAMEBUFFER,Ht.DEPTH_STENCIL_ATTACHMENT,Ht.RENDERBUFFER,e.__webglRenderbuffer):J(e.__webglRenderbuffer,e),r&&Ht.generateMipmap(Ht.TEXTURE_2D);t?Ht.bindTexture(Ht.TEXTURE_CUBE_MAP,null):Ht.bindTexture(Ht.TEXTURE_2D,null),Ht.bindRenderbuffer(Ht.RENDERBUFFER,null),Ht.bindFramebuffer(Ht.FRAMEBUFFER,null)}var o,s,h,l,u;e?(o=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,s=e.width,h=e.height,l=0,u=0):(o=null,s=qt,h=Kt,l=jt,u=Yt),o!==At&&(Ht.bindFramebuffer(Ht.FRAMEBUFFER,o),Ht.viewport(l,u,s,h),At=o),Qt=s,Zt=h},this.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},this.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},this.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},this.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}},THREE.WebGLRenderTarget=function(e,t,r){this.width=e,this.height=t,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==r.depthBuffer?r.depthBuffer:!0,this.stencilBuffer=void 0!==r.stencilBuffer?r.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(e,t){this.width=e,this.height=t},clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.WebGLExtensions=function(e){var t={};this.get=function(r){if(void 0!==t[r])return t[r];var n;switch(r){case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(r)}return null===n&&console.log("THREE.WebGLRenderer: "+r+" extension not supported."),t[r]=n,n}},THREE.WebGLProgram=function(){var e=0,t=function(e){var t,r,n=[];for(var i in e)t=e[i],t!==!1&&(r="#define "+i+" "+t,n.push(r));return n.join("\n")},r=function(e,t,r){for(var n={},i=0,a=r.length;a>i;i++){var o=r[i];n[o]=e.getUniformLocation(t,o)}return n},n=function(e,t,r){for(var n={},i=0,a=r.length;a>i;i++){var o=r[i];n[o]=e.getAttribLocation(t,o)}return n};return function(i,a,o,s){var h=i,l=h.context,u=o.defines,f=o.__webglShader.uniforms,c=o.attributes,d=o.__webglShader.vertexShader,E=o.__webglShader.fragmentShader,p=o.index0AttributeName;void 0===p&&s.morphTargets===!0&&(p="position");var m="SHADOWMAP_TYPE_BASIC";s.shadowMapType===THREE.PCFShadowMap?m="SHADOWMAP_TYPE_PCF":s.shadowMapType===THREE.PCFSoftShadowMap&&(m="SHADOWMAP_TYPE_PCF_SOFT");var g="ENVMAP_TYPE_CUBE",v="ENVMAP_MODE_REFLECTION",T="ENVMAP_BLENDING_MULTIPLY";if(s.envMap){switch(o.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:g="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:g="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:g="ENVMAP_TYPE_SPHERE"}switch(o.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:v="ENVMAP_MODE_REFRACTION"}switch(o.combine){case THREE.MultiplyOperation:T="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:T="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:T="ENVMAP_BLENDING_ADD"}}var _,x,y=t(u),R=l.createProgram();_=["precision "+s.precision+" float;","precision "+s.precision+" int;",y,s.supportsVertexTextures?"#define VERTEX_TEXTURES":"",h.gammaInput?"#define GAMMA_INPUT":"",h.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,"#define MAX_BONES "+s.maxBones,s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.envMap?"#define "+v:"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.vertexColors?"#define USE_COLOR":"",s.skinning?"#define USE_SKINNING":"",s.useVertexTexture?"#define BONE_TEXTURE":"",s.morphTargets?"#define USE_MORPHTARGETS":"",s.morphNormals?"#define USE_MORPHNORMALS":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+m:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.sizeAttenuation?"#define USE_SIZEATTENUATION":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",""].join("\n"),x=["precision "+s.precision+" float;","precision "+s.precision+" int;",s.bumpMap||s.normalMap?"#extension GL_OES_standard_derivatives : enable":"",y,"#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,s.alphaTest?"#define ALPHATEST "+s.alphaTest:"",h.gammaInput?"#define GAMMA_INPUT":"",h.gammaOutput?"#define GAMMA_OUTPUT":"",s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.envMap?"#define "+g:"",s.envMap?"#define "+v:"",s.envMap?"#define "+T:"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.vertexColors?"#define USE_COLOR":"",s.metal?"#define METAL":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+m:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n");var b=new THREE.WebGLShader(l,l.VERTEX_SHADER,_+d),H=new THREE.WebGLShader(l,l.FRAGMENT_SHADER,x+E);l.attachShader(R,b),l.attachShader(R,H),void 0!==p&&l.bindAttribLocation(R,0,p),l.linkProgram(R),l.getProgramParameter(R,l.LINK_STATUS)===!1&&(console.error("THREE.WebGLProgram: Could not initialise shader."),console.error("gl.VALIDATE_STATUS",l.getProgramParameter(R,l.VALIDATE_STATUS)),console.error("gl.getError()",l.getError())),""!==l.getProgramInfoLog(R)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",l.getProgramInfoLog(R)),l.deleteShader(b),l.deleteShader(H);var M=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences","bindMatrix","bindMatrixInverse"];s.useVertexTexture?(M.push("boneTexture"),M.push("boneTextureWidth"),M.push("boneTextureHeight")):M.push("boneGlobalMatrices"),s.logarithmicDepthBuffer&&M.push("logDepthBufFC");for(var w in f)M.push(w);this.uniforms=r(l,R,M),M=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"];for(var S=0;S<s.maxMorphTargets;S++)M.push("morphTarget"+S);for(var S=0;S<s.maxMorphNormals;S++)M.push("morphNormal"+S);for(var A in c)M.push(A);return this.attributes=n(l,R,M),this.attributesKeys=Object.keys(this.attributes),this.id=e++,this.code=a,this.usedTimes=1,this.program=R,this.vertexShader=b,this.fragmentShader=H,this}}(),THREE.WebGLShader=function(){var e=function(e){for(var t=e.split("\n"),r=0;r<t.length;r++)t[r]=r+1+": "+t[r];return t.join("\n")};return function(t,r,n){var i=t.createShader(r);return t.shaderSource(i,n),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS)===!1&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(i)&&(console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t.getShaderInfoLog(i)),console.warn(e(n))),i}}(),THREE.SpritePlugin=function(e,t){function r(){var t=u.createProgram(),r=u.createShader(u.VERTEX_SHADER),n=u.createShader(u.FRAGMENT_SHADER);return u.shaderSource(r,["precision "+e.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),u.shaderSource(n,["precision "+e.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),u.compileShader(r),u.compileShader(n),u.attachShader(t,r),u.attachShader(t,n),u.linkProgram(t),t}function n(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var i,a,o,s,h,l,u=e.context,f=new THREE.Vector3,c=new THREE.Quaternion,d=new THREE.Vector3,E=function(){var e=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),t=new Uint16Array([0,1,2,0,2,3]);i=u.createBuffer(),a=u.createBuffer(),u.bindBuffer(u.ARRAY_BUFFER,i),u.bufferData(u.ARRAY_BUFFER,e,u.STATIC_DRAW),u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,a),u.bufferData(u.ELEMENT_ARRAY_BUFFER,t,u.STATIC_DRAW),o=r(),s={position:u.getAttribLocation(o,"position"),uv:u.getAttribLocation(o,"uv")},h={uvOffset:u.getUniformLocation(o,"uvOffset"),uvScale:u.getUniformLocation(o,"uvScale"),rotation:u.getUniformLocation(o,"rotation"),scale:u.getUniformLocation(o,"scale"),color:u.getUniformLocation(o,"color"),map:u.getUniformLocation(o,"map"),opacity:u.getUniformLocation(o,"opacity"),modelViewMatrix:u.getUniformLocation(o,"modelViewMatrix"),projectionMatrix:u.getUniformLocation(o,"projectionMatrix"),fogType:u.getUniformLocation(o,"fogType"),fogDensity:u.getUniformLocation(o,"fogDensity"),fogNear:u.getUniformLocation(o,"fogNear"),fogFar:u.getUniformLocation(o,"fogFar"),fogColor:u.getUniformLocation(o,"fogColor"),alphaTest:u.getUniformLocation(o,"alphaTest")};var n=document.createElement("canvas");n.width=8,n.height=8;var f=n.getContext("2d");f.fillStyle="white",f.fillRect(0,0,8,8),l=new THREE.Texture(n),l.needsUpdate=!0};this.render=function(r,p){if(0!==t.length){void 0===o&&E(),u.useProgram(o),u.enableVertexAttribArray(s.position),u.enableVertexAttribArray(s.uv),u.disable(u.CULL_FACE),u.enable(u.BLEND),u.bindBuffer(u.ARRAY_BUFFER,i),u.vertexAttribPointer(s.position,2,u.FLOAT,!1,16,0),u.vertexAttribPointer(s.uv,2,u.FLOAT,!1,16,8),u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,a),u.uniformMatrix4fv(h.projectionMatrix,!1,p.projectionMatrix.elements),u.activeTexture(u.TEXTURE0),u.uniform1i(h.map,0);var m=0,g=0,v=r.fog;v?(u.uniform3f(h.fogColor,v.color.r,v.color.g,v.color.b),v instanceof THREE.Fog?(u.uniform1f(h.fogNear,v.near),u.uniform1f(h.fogFar,v.far),u.uniform1i(h.fogType,1),m=1,g=1):v instanceof THREE.FogExp2&&(u.uniform1f(h.fogDensity,v.density),u.uniform1i(h.fogType,2),m=2,g=2)):(u.uniform1i(h.fogType,0),m=0,g=0);for(var T=0,_=t.length;_>T;T++){var x=t[T];x._modelViewMatrix.multiplyMatrices(p.matrixWorldInverse,x.matrixWorld),x.z=-x._modelViewMatrix.elements[14]}t.sort(n);for(var y=[],T=0,_=t.length;_>T;T++){var x=t[T],R=x.material;u.uniform1f(h.alphaTest,R.alphaTest),u.uniformMatrix4fv(h.modelViewMatrix,!1,x._modelViewMatrix.elements),x.matrixWorld.decompose(f,c,d),y[0]=d.x,y[1]=d.y;var b=0;r.fog&&R.fog&&(b=g),m!==b&&(u.uniform1i(h.fogType,b),m=b),null!==R.map?(u.uniform2f(h.uvOffset,R.map.offset.x,R.map.offset.y),u.uniform2f(h.uvScale,R.map.repeat.x,R.map.repeat.y)):(u.uniform2f(h.uvOffset,0,0),u.uniform2f(h.uvScale,1,1)),u.uniform1f(h.opacity,R.opacity),u.uniform3f(h.color,R.color.r,R.color.g,R.color.b),u.uniform1f(h.rotation,R.rotation),u.uniform2fv(h.scale,y),e.setBlending(R.blending,R.blendEquation,R.blendSrc,R.blendDst),e.setDepthTest(R.depthTest),e.setDepthWrite(R.depthWrite),R.map&&R.map.image&&R.map.image.width?e.setTexture(R.map,0):e.setTexture(l,0),u.drawElements(u.TRIANGLES,6,u.UNSIGNED_SHORT,0)}u.enable(u.CULL_FACE),e.resetGLState()}}};